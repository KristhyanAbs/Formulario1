{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/questionnaire/Example.vue","webpack:///./src/components/FlowForm.vue","webpack:///./src/components/FlowFormQuestion.vue","webpack:///./src/models/LanguageModel.js","webpack:///./src/models/QuestionModel.js","webpack:///./src/components/QuestionTypes/DropdownType.vue","webpack:///./src/mixins/IsMobile.js","webpack:///./src/components/QuestionTypes/BaseType.vue","webpack:///./src/components/QuestionTypes/BaseType.vue?7137","webpack:///./src/components/QuestionTypes/DropdownType.vue?4814","webpack:///./src/components/QuestionTypes/TextType.vue","webpack:///./src/components/QuestionTypes/TextType.vue?0d23","webpack:///./src/components/QuestionTypes/EmailType.vue","webpack:///./src/components/QuestionTypes/EmailType.vue?eabb","webpack:///./src/components/QuestionTypes/LongTextType.vue","webpack:///./src/components/QuestionTypes/LongTextType.vue?423b","webpack:///./src/components/QuestionTypes/MultipleChoiceType.vue","webpack:///./src/components/QuestionTypes/MultipleChoiceType.vue?55d5","webpack:///./src/components/QuestionTypes/MultiplePictureChoiceType.vue","webpack:///./src/components/QuestionTypes/MultiplePictureChoiceType.vue?9c21","webpack:///./src/components/QuestionTypes/NumberType.vue","webpack:///./src/components/QuestionTypes/NumberType.vue?f160","webpack:///./src/components/QuestionTypes/PasswordType.vue","webpack:///./src/components/QuestionTypes/PasswordType.vue?fd36","webpack:///./src/components/QuestionTypes/PhoneType.vue","webpack:///./src/components/QuestionTypes/PhoneType.vue?17d3","webpack:///./src/components/QuestionTypes/SectionBreakType.vue","webpack:///./src/components/QuestionTypes/SectionBreakType.vue?922c","webpack:///./src/components/QuestionTypes/UrlType.vue","webpack:///./src/components/QuestionTypes/UrlType.vue?c7a9","webpack:///./src/components/QuestionTypes/DateType.vue","webpack:///./src/components/QuestionTypes/DateType.vue?c55b","webpack:///./src/components/QuestionTypes/FileType.vue","webpack:///./src/components/QuestionTypes/FileType.vue?b827","webpack:///./src/components/QuestionTypes/MatrixType.vue","webpack:///./src/components/QuestionTypes/MatrixType.vue?70b5","webpack:///./src/components/FlowFormQuestion.vue?1533","webpack:///./src/mixins/ComponentInstance.js","webpack:///./src/components/FlowForm.vue?ee45","webpack:///./examples/questionnaire/Example.vue?6108","webpack:///./examples/questionnaire/main.js","webpack:///./examples/questionnaire/assets/images/facebook.png","webpack:///./examples/questionnaire/assets/images/instagram.png","webpack:///./examples/questionnaire/Example.vue?9502","webpack:///./examples/questionnaire/assets/images/twitter.png","webpack:///./src/components/FlowForm.vue?0560","webpack:///./examples/questionnaire/assets/images/tiktok.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","ref","onComplete","onSubmit","questions","language","standalone","complete","completeButton","submitted","type","href","onSendData","aria-label","submitText","formatString","pressEnter","version","xmlns","xmlns:xlink","x","y","width","height","viewBox","aria-hidden","isMobile","isIos","questionList","q","index","setQuestionRef","question","active","activeQuestionIndex","answer","onQuestionAnswered","reverse","disabled","setDisabled","autofocus","isOnLastStep","thankYouText","submit","ariaSubmitText","successText","progressbar","percentCompleted","style","replace","navigation","goToPreviousQuestion","role","ariaPrev","prev","isNextQuestionAvailable","goToNextQuestion","ariaNext","next","timer","formatTime","time","aria-live","mainClasses","QuestionType","SectionBreak","tagline","title","required","ariaRequired","inline","dataValue","onEnter","showHelperText","subtitle","LongText","helpText","longTextHelpText","MultipleChoice","multiple","multipleChoiceHelpText","multipleChoiceHelpTextSingle","description","descriptionLink","link","url","target","text","showOkButton","ariaOk","continue","showSkip","skip","ok","showInvalid","errorMessage","LanguageModel","options","this","enterKey","shiftKey","otherPrompt","placeholder","invalidPrompt","ariaMultipleChoice","ariaTypeAnswer","errorAllowedFileTypes","errorMaxFileSize","errorMinFiles","errorMaxFiles","assign","string","replacements","match","word","bytes","units","Math","floor","log","pow","toFixed","freeze","Date","Dropdown","Email","File","MultiplePictureChoice","Number","Password","Phone","Text","Url","Matrix","MaskPresets","label","DateIso","PhoneUs","ChoiceOption","selected","imageSrc","imageAlt","LinkOption","QuestionModel","id","answered","className","html","jump","mask","allowOther","other","content","helpTextShow","min","max","maxLength","nextStepOnAnswer","accept","maxSize","rows","columns","Array","isArray","resetOptions","nextId","isNaN","numSelected","forEach","optionValue","choiceValue","indexOf","otherAnswer","map","includes","hidden","xml:space","onChange","onKeyDownListener","onKeyUpListener","option","choiceLabel","answerLabel","navigator","document","userAgent","IsMobile","props","Boolean","modelValue","String","mixins","dirty","enterPressed","allowedChars","alwaysAllowedKeys","focused","canReceiveFocus","mounted","methods","fixAnswer","getElement","el","$refs","input","$el","setFocus","unsetFocus","$event","focus","blur","onKeyDown","clearTimeout","timeoutId","preventDefault","setAnswer","_onEnter","isValid","$emit","hasValue","validate","computed","v","trim","__exports__","extends","BaseType","stopPropagation","data-placeholder","inputType","masked","maxlength","components","TheMask","validateMask","some","TextType","test","onEnterDown","TextareaAutosize","addEventListener","onResizeListener","beforeUnmount","removeEventListener","resize","toggleAnswer","getLabel","hasImages","src","alt","getToggleKey","editingOther","startEditOther","stopEditOther","onChangeOther","addKeyListener","removeKeyListener","watch","onKeyListener","keyCode","toUpperCase","charCodeAt","fromCharCode","_toggleAnswer","toggle","_removeAnswer","$nextTick","otherInput","self","filter","MultipleChoiceType","URL","_","files","checkFileAccept","file","extension","split","pop","acceptedFileExtensionsRegex","acceptedFileMimesRegex","numFiles","from","every","fileTypes","fileSize","reduce","current","size","formatFileSize","checkValidity","acceptArray","acceptedFileMimes","RegExp","join","acceptedFileExtensions","cx","cy","column","row","inputList","data-id","beforeMount","beforeUpdate","checked","inputs","values","inputGroups","dataset","FlowFormDateType","FlowFormDropdownType","FlowFormEmailType","FlowFormLongTextType","FlowFormMultipleChoiceType","FlowFormMultiplePictureChoiceType","FlowFormNumberType","FlowFormPasswordType","FlowFormPhoneType","FlowFormSectionBreakType","FlowFormTextType","FlowFormFileType","FlowFormUrlType","FlowFormMatrixType","default","debounced","focusField","qanimate","onAnimationEnd","questionComponent","shouldFocus","returnFocus","checkAnswer","emitAnswer","onTab","emitAnswerTab","fn","isMultipleChoiceType","debounce","delay","debounceTimer","setTimeout","cache","classes","toLowerCase","substring","instances","ComponentInstance","getInstance","setInstance","FlowFormQuestion","validator","timerStartStep","timerStopStep","questionRefs","completed","questionListActivePath","timerOn","timerInterval","onBeforeUnload","setQuestions","checkTimer","stopTimer","numActiveQuestions","activeQuestion","activeQuestionId","questionModels","numCompletedQuestions","num","isOnTimerStartStep","isOnTimerStopStep","classMap","defaultSlot","$slots","children","componentInstance","model","keys","undefined","classReference","instance","instanceKey","questionTypeKey","activeQuestionComponent","setQuestionListActivePath","setQuestionList","serialIndex","activeIndex","setIndex","getJumpId","goToQuestion","event","returnValue","e","emitTab","emitEnter","emitSubmit","emitComplete","button","blurFocus","startTimer","questionIndex","_index","previousQuestionsAnswered","activeElement","setInterval","incrementTime","clearInterval","seconds","startIndex","toISOString","substr","state","reset","resetAnswer","FlowForm","path_b","_other","path_a","flowform","getData","answers","render","createApp","Example","mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,MAAS,GAGNK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,GAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,0qDC5HD,eAQM,OARDyC,MAAM,kBAAgB,CACzB,eAKI,UAJF,eAAsC,QAAhCA,MAAM,OAAM,iBAClB,eAEO,QAFDA,MAAM,kBAAiB,+GAI/B,eAAkF,KAA/EA,MAAM,iBAAgB,2D,YAMtBA,MAAM,Y,yBAkBRA,MAAM,gB,kFAvDf,eA0DM,YAzDJ,EAYA,eA4CY,GA3CVC,IAAI,WACC,WAAU,EAAAC,WACV,SAAQ,EAAAC,SACNC,UAAW,EAAAA,UACXC,SAAU,EAAAA,SACVC,YAAY,G,CAIHC,SAAQ,gBACtB,iBAQM,CARN,MAYeC,eAAc,gBAC7B,iBAgBM,CAhBuB,EAAAC,U,wCAA7B,eAgBM,MAhBN,EAgBM,CAfJ,eASS,UARPT,MAAM,eACNC,IAAI,SACJS,KAAK,SACLC,KAAK,IACA,QAAK,+CAAU,EAAAC,eAAU,cAC9BC,aAAW,mB,CAEX,eAAsC,2BAA7B,EAAAR,SAASS,YAAU,I,KAE9B,eAII,KAJDd,MAAM,eACPW,KAAK,IACA,QAAK,+CAAU,EAAAC,eAAU,cAC9B,UAAQ,EAAAP,SAASU,aAAa,EAAAV,SAASW,a,aAIb,EAAAP,W,iBAA9B,eAAmE,IAAnE,EAAyC,2B,4FCtDxCT,MAAM,e,GACJA,MAAM,e,SAmBgBA,MAAM,6C,GAGtBA,MAAM,kB,GAEDA,MAAM,O,0CAwBbA,MAAM,gB,GAMZA,MAAM,c,GACJA,MAAM,qB,GAEFA,MAAM,kB,SAKUA,MAAM,S,mBASzB,eAcM,OAbJiB,QAAQ,MACRC,MAAM,6BACNC,cAAY,+BACZC,EAAE,MACFC,EAAE,MACFC,MAAM,WACNC,OAAO,WACPC,QAAQ,2BACRC,cAAY,Q,CAEZ,eAEE,QADAnD,EAAE,kK,MAGA0B,MAAM,aAAayB,cAAY,Q,mBAUrC,eAcM,OAbJR,QAAQ,MACRC,MAAM,6BACNC,cAAY,+BACZC,EAAE,MACFC,EAAE,MACFC,MAAM,WACNC,OAAO,WACPC,QAAQ,2BACRC,cAAY,Q,CAEZ,eAEE,QADAnD,EAAE,wK,MAGA0B,MAAM,aAAayB,cAAY,Q,SAGvBzB,MAAM,W,2FApH9B,eAyHM,OAzHDA,MAAK,gBAAC,MAAK,uBAAiC,EAAAM,WAAU,gBAAmB,EAAAoB,SAAQ,aAAgB,EAAAC,U,CACpG,eAqDM,MArDN,EAqDM,CApDJ,eAmDM,MAnDN,EAmDM,E,mBAlDJ,eAaE,2BAXqB,EAAAC,cAAY,SAAzBC,EAAGC,G,wBAFb,eAaE,GAZC7B,IAAK,EAAA8B,eAECC,SAAUH,EACVxB,SAAU,EAAAA,SACVf,IAAG,IAAQwC,EACXG,OAAQJ,EAAEC,QAAU,EAAAI,oB,WAClBL,EAAEM,O,yCAAFN,EAAEM,OAAM,GACZ,SAAQ,EAAAC,mBACNC,QAAS,EAAAA,QACTC,SAAU,EAAAA,SACZ,UAAS,EAAAC,YACPC,UAAW,EAAAA,W,6IAGpB,eAAa,oBAGF,EAAAC,c,iBAAX,eA+BM,MA/BN,EA+BM,CA9BJ,eAOO,wBAPP,iBAOO,CALL,eAIM,MAJN,EAIM,CAHJ,eAEI,UADF,eAAoD,OAApD,EAAoD,eAA/B,EAAApC,SAASqC,cAAY,WAKhD,eAoBO,8BApBP,iBAoBO,CAZI,EAAAjC,U,wCANT,eASS,U,MARPT,MAAM,eACNC,IAAI,SACJS,KAAK,SACLC,KAAK,IACA,QAAK,+CAAU,EAAAgC,WAAM,cAEnB9B,aAAY,EAAAR,SAASuC,gB,CAC1B,eAAsC,2BAA7B,EAAAvC,SAASS,YAAU,I,MAMvB,EAAAL,U,wCAJT,eAMI,K,MALFT,MAAM,eACNW,KAAK,IACA,QAAK,+CAAU,EAAAgC,WAAM,cAE1B,UAAQ,EAAAtC,SAASU,aAAa,EAAAV,SAASW,a,WAEX,EAAAP,W,iBAA9B,eAAuE,IAAvE,EAAuE,eAA3B,EAAAJ,SAASwC,aAAW,I,uDAMxE,eAgEM,MAhEN,EAgEM,CA/DJ,eA8DM,MA9DN,EA8DM,CA7DO,EAAAC,a,iBAAX,eAKM,O,MALkB9C,MAAK,gBAAC,aAAY,eAA+C,IAAhB,EAAA+C,iBAAgB,UAAqC,MAAhB,EAAAA,qB,CAC5G,eAEM,MAFN,EAEM,CADJ,eAA2F,OAAtF/C,MAAM,uBAA8BgD,MAAK,yBAAc,EAAAD,iBAAgB,O,yBACxE,IACN,eAAG,EAAA1C,SAAS0C,iBAAiBE,QAAO,WAAa,EAAAF,mBAAgB,I,0BAExD,EAAAG,Y,iBAAX,eAmDM,MAnDN,EAmDM,CAlDJ,eAwBI,KAvBFlD,MAAK,gBAAC,SAAQ,cAEkC,IAAnB,EAAAkC,qBAA6B,EAAAzB,aAD1DE,KAAK,IAEA,QAAK,+CAAU,EAAAwC,yBAAoB,cACxCC,KAAK,SACEvC,aAAY,EAAAR,SAASgD,U,CAE5B,EAeA,eAAsE,OAAtE,EAAsE,eAAvB,EAAAhD,SAASiD,MAAI,I,MAE9D,eAwBI,KAvBFtD,MAAK,gBAAC,SAAQ,eAEgB,EAAAuD,6BAD9B5C,KAAK,IAEA,QAAK,+CAAU,EAAA6C,qBAAgB,cACpCJ,KAAK,SACEvC,aAAY,EAAAR,SAASoD,U,CAE5B,EAeA,eAAsE,OAAtE,EAAsE,eAAvB,EAAApD,SAASqD,MAAI,I,+BAGrD,EAAAC,O,iBAAX,eAEM,MAFN,EAEM,CADJ,eAAmC,2BAA1B,EAAAC,WAAW,EAAAC,OAAI,M,qCCpHzB7D,MAAM,W,SAGCA,MAAM,a,SAGJA,MAAM,O,SACNA,MAAM,U,mBAG8F,eAAiC,QAA3ByB,cAAY,QAAO,KAAC,G,GAA1B,G,SAE3EzB,MAAM,Y,SAejCA,MAAM,S,mCAKJA,MAAM,U,SACNA,MAAM,U,SAGeA,MAAM,yB,SAamCA,MAAM,iB,uCAY3EA,MAAM,iC,wEAuBeA,MAAM,YAAYoD,KAAK,QAAQU,YAAU,a,iDArFvE,eAuFM,OAvFD9D,MAAK,gBAAC,qBAAmC,EAAA+D,cAAa9D,IAAI,Y,CAC7D,eAqFM,MArFN,EAqFM,CApFJ,eA2DM,OA3DMD,MAAK,iCAAqB,EAAAgC,SAAStB,OAAS,EAAAsD,aAAaC,gB,CACnE,eA8CM,OA9CMjE,MAAK,oBAAU,EAAAgC,SAAStB,OAAS,EAAAsD,aAAaC,gB,CAC1B,EAAAjC,SAASkC,S,iBAAvC,eAA6E,OAA7E,EAA6E,eAA1B,EAAAlC,SAASkC,SAAO,I,sBAEnD,EAAAlC,SAASmC,O,iBAAzB,eAoBW,gBAnBe,EAAAnC,SAAStB,OAAS,EAAAsD,aAAaC,c,iBAAvD,eAAgG,OAAhG,EAAgG,eAAxB,EAAAjC,SAASmC,OAAK,K,iBACtF,eAiBO,OAjBP,EAiBO,C,8BAhBF,EAAAnC,SAASmC,OAAQ,KACpB,GAC+B,EAAAnC,SAASoC,U,iBAAxC,eAAgJ,Q,MAA1IpE,MAAM,aAA6Ca,aAAY,EAAAR,SAASgE,aAAcjB,KAAK,Q,8BAErF,EAAApB,SAASsC,Q,iBAArB,eAWO,OAXP,EAWO,E,iBAVL,eASE,eAPW,EAAAtC,SAAStB,MAAI,CADxBT,IAAI,oBAEG+B,SAAU,EAAAA,SACV3B,SAAU,EAAAA,S,WACR,EAAAkE,U,qDAAA,EAAAA,UAAS,IACXtC,OAAQ,EAAAA,OACRK,SAAU,EAAAA,SACZ,OAAM,EAAAkC,S,mIAMO,EAAAC,gB,iBAA1B,eAOO,OAPP,EAOO,CANO,EAAAzC,SAAS0C,U,iBAArB,eAA6D,wBAA3B,EAAA1C,SAAS0C,UAAQ,I,sBAExB,EAAA1C,SAAStB,OAAS,EAAAsD,aAAaW,UAAa,EAAAjD,S,wCAAvE,eAAuK,Q,MAAjK1B,MAAM,SAAqE,UAAQ,EAAAgC,SAAS4C,UAAY,EAAAvE,SAASU,aAAa,EAAAV,SAASwE,mB,WAElH,EAAA7C,SAAStB,OAAS,EAAAsD,aAAac,gBAAkB,EAAA9C,SAAS+C,U,iBAArF,eAAgK,OAAhK,EAAgK,eAA9D,EAAA/C,SAAS4C,UAAY,EAAAvE,SAAS2E,wBAAsB,IACtH,EAAAhD,SAAStB,OAAS,EAAAsD,aAAac,gB,iBAA/D,eAAsJ,OAAtJ,EAAsJ,eAApE,EAAA9C,SAAS4C,UAAY,EAAAvE,SAAS4E,8BAA4B,I,+CAGlI,EAAAjD,SAASsC,O,wCAArB,eAWM,MAXN,EAWM,E,iBAVJ,eASE,eAPW,EAAAtC,SAAStB,MAAI,CADxBT,IAAI,oBAEG+B,SAAU,EAAAA,SACV3B,SAAU,EAAAA,S,WACR,EAAAkE,U,qDAAA,EAAAA,UAAS,IACXtC,OAAQ,EAAAA,OACRK,SAAU,EAAAA,SACZ,OAAM,EAAAkC,S,kFAIR,EAAAxC,SAASkD,aAA8C,IAA/B,EAAAlD,SAASmD,gBAAgBxI,Q,iBAA1D,eASI,IATJ,EASI,CARU,EAAAqF,SAASkD,a,iBAArB,eAAmE,wBAA9B,EAAAlD,SAASkD,aAAW,I,0CACzD,eAMgC,2BALN,EAAAlD,SAASmD,iBAAe,SAAxCC,EAAMtD,G,wBADhB,eAMgC,KAJ9B9B,MAAM,SACCV,IAAG,IAAQwC,EACXnB,KAAMyE,EAAKC,IACXC,OAAQF,EAAKE,Q,eAClBF,EAAKG,MAAQH,EAAKC,KAAG,Q,mCAIoB,EAAAG,gB,iBAAjD,eAqBM,MArBN,EAqBM,CApBJ,eAWS,UAVPxF,MAAM,eACNU,KAAK,SACLT,IAAI,SACJU,KAAK,IACA,QAAK,8CAAU,EAAA6D,SAAA,EAAAA,QAAA,qBAAO,cACpB3D,aAAY,EAAAR,SAASoF,Q,CAEhB,EAAAzD,SAAStB,OAAS,EAAAsD,aAAaC,c,iBAA3C,eAAuF,wBAA3B,EAAA5D,SAASqF,UAAQ,IAC5D,EAAAC,Y,iBAAjB,eAAuD,wBAAvB,EAAAtF,SAASuF,MAAI,K,iBAC7C,eAAqC,wBAArB,EAAAvF,SAASwF,IAAE,K,KAMrB,EAAA7D,SAAStB,OAAS,EAAAsD,aAAaW,UAAa,EAAAjD,S,wCAHpD,eAMI,K,MALF1B,MAAM,eACNW,KAAK,IAEA,QAAK,8CAAU,EAAA6D,SAAA,EAAAA,QAAA,qBAAO,cAC3B,UAAQ,EAAAnE,SAASU,aAAa,EAAAV,SAASW,a,oCAIhC,EAAA8E,e,iBAAX,eAAuG,MAAvG,EAAuG,eAArB,EAAAC,cAAY,I;;;;;MChF/EC,G,WACnB,WAAYC,GAAS,WACnBC,KAAKC,SAAW,QAChBD,KAAKE,SAAW,QAChBF,KAAKL,GAAK,KACVK,KAAKR,SAAW,WAChBQ,KAAKN,KAAO,OACZM,KAAKlF,WAAa,kBAClBkF,KAAKlB,uBAAyB,6BAC9BkB,KAAKjB,6BAA+B,yBACpCiB,KAAKG,YAAc,QACnBH,KAAKI,YAAc,2BACnBJ,KAAKpF,WAAa,SAClBoF,KAAKrB,iBAAmB,8CACxBqB,KAAK5C,KAAO,OACZ4C,KAAKxC,KAAO,OACZwC,KAAKnD,iBAAmB,sBACxBmD,KAAKK,cAAgB,sCACrBL,KAAKxD,aAAe,aACpBwD,KAAKrD,YAAc,iCACnBqD,KAAKT,OAAS,oBACdS,KAAK7B,aAAe,wBACpB6B,KAAK7C,SAAW,gBAChB6C,KAAKzC,SAAW,YAChByC,KAAKtD,eAAiB,kBACtBsD,KAAKM,mBAAqB,0BAC1BN,KAAKO,eAAiB,wBACtBP,KAAKQ,sBAAwB,qDAC7BR,KAAKS,iBAAmB,uDACxBT,KAAKU,cAAgB,oDACrBV,KAAKW,cAAgB,qDAErBjK,OAAOkK,OAAOZ,KAAMD,GAAW,I,uCAOjC,SAAac,EAAQC,GAAc,WACjC,OAAOD,EAAO9D,QAAQ,WAAW,SAACgE,EAAOC,GACvC,OAAI,EAAKA,GACA,6BAA+B,EAAKA,GAAQ,UAC1CF,GAAgBA,EAAaE,GAC/BF,EAAaE,GAGfD,O,4BAIX,SAAeE,GACb,IACEC,EAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,MAChC3K,EAAI0K,EAAQ,EAAIE,KAAKC,MAAMD,KAAKE,IAAIJ,GAASE,KAAKE,IAAI,OAAS,EAEjE,OAAgD,GAAxCJ,EAAQE,KAAKG,IAAI,KAAM/K,IAAIgL,QAAQ,GAAS,IAAML,EAAM3K,O,uUCxD7D,IAAMuH,GAAepH,OAAO8K,OAAO,CACxCC,KAAM,mBACNC,SAAU,uBACVC,MAAO,oBACPC,KAAM,mBACNnD,SAAU,uBACVG,eAAgB,6BAChBiD,sBAAuB,oCACvBC,OAAQ,qBACRC,SAAU,uBACVC,MAAO,oBACPjE,aAAc,2BACdkE,KAAM,mBACNC,IAAK,kBACLC,OAAQ,uBASGC,IANsB1L,OAAO8K,OAAO,CAC/Ca,MAAO,GACPvJ,MAAO,GACPsD,UAAU,IAGe1F,OAAO8K,OAAO,CACvCC,KAAM,aACNa,QAAS,aACTC,QAAS,oBAGEC,GAAb,WACE,WAAYzC,GAAS,WACnBC,KAAKqC,MAAQ,GACbrC,KAAKlH,MAAQ,KACbkH,KAAKyC,UAAW,EAChBzC,KAAK0C,SAAW,KAChB1C,KAAK2C,SAAW,KAEhBjM,OAAOkK,OAAOZ,KAAMD,GARxB,sCAWE,WACE,OAAOC,KAAKqC,OAASrC,KAAKlH,QAZ9B,yBAeE,WAEE,OAAmB,OAAfkH,KAAKlH,MACAkH,KAAKlH,MAIPkH,KAAKqC,OAASrC,KAAK2C,UAAY3C,KAAK0C,WAtB/C,oBAyBE,WACE1C,KAAKyC,UAAYzC,KAAKyC,aA1B1B,KA8BaG,GACX,WAAY7C,GAAS,WACnBC,KAAKb,IAAM,GACXa,KAAKX,KAAO,GACZW,KAAKZ,OAAS,SAEd1I,OAAOkK,OAAOZ,KAAMD,IAsBH8C,G,WACnB,WAAY9C,GAAS,WAEnBA,EAAUA,GAAW,GAErBC,KAAK8C,GAAK,KACV9C,KAAK/D,OAAS,KACd+D,KAAK+C,UAAW,EAChB/C,KAAKpE,MAAQ,EACboE,KAAKD,QAAU,GACfC,KAAKhB,YAAc,GACnBgB,KAAKgD,UAAY,GACjBhD,KAAKxF,KAAO,KACZwF,KAAKiD,KAAO,KACZjD,KAAK9B,UAAW,EAChB8B,KAAKkD,KAAO,KACZlD,KAAKI,YAAc,KACnBJ,KAAKmD,KAAO,GACZnD,KAAKnB,UAAW,EAChBmB,KAAKoD,YAAa,EAClBpD,KAAKqD,MAAQ,KACbrD,KAAK7F,SAAW,KAChB6F,KAAKhC,QAAU,KACfgC,KAAK/B,MAAQ,KACb+B,KAAKxB,SAAW,KAChBwB,KAAKsD,QAAU,KACftD,KAAK5B,QAAS,EACd4B,KAAKtB,SAAW,KAChBsB,KAAKuD,cAAe,EACpBvD,KAAKf,gBAAkB,GACvBe,KAAKwD,IAAM,KACXxD,KAAKyD,IAAM,KACXzD,KAAK0D,UAAY,KACjB1D,KAAK2D,kBAAmB,EACxB3D,KAAK4D,OAAS,KACd5D,KAAK6D,QAAU,KACf7D,KAAK8D,KAAO,GACZ9D,KAAK+D,QAAU,GAEfrN,OAAOkK,OAAOZ,KAAMD,GAGhBC,KAAKxF,OAASsD,GAAakE,QACxBhC,KAAKmD,OACRnD,KAAKmD,KAAOf,GAAYJ,OAErBhC,KAAKI,cACRJ,KAAKI,YAAcJ,KAAKmD,OAIxBnD,KAAKxF,OAASsD,GAAaoE,MAC7BlC,KAAKmD,KAAO,MAGVnD,KAAKxF,OAASsD,GAAa2D,MAASzB,KAAKI,cAC3CJ,KAAKI,YAAc,cAGjBJ,KAAKxF,OAASsD,GAAaqE,QAAUnC,KAAKnB,WAAamF,MAAMC,QAAQjE,KAAK/D,UAC5E+D,KAAK/D,OAAS+D,KAAK/D,OAAS,CAAC+D,KAAK/D,QAAU,KAKzC+D,KAAK9B,UAAsC,qBAAnB6B,EAAQ9D,WAE1B+D,KAAK/D,QAAY+D,KAAKnB,WAAYmB,KAAK/D,OAAOxF,UADvDuJ,KAAK+C,UAAW,GAKlB/C,KAAKkE,e,oCAGP,WACE,IAAIC,EAAS,KAUb,MARyB,oBAAdnE,KAAKkD,KACdiB,EAASnE,KAAKkD,KAAKrM,KAAKmJ,MACfA,KAAKkD,KAAKlD,KAAK/D,QACxBkI,EAASnE,KAAKkD,KAAKlD,KAAK/D,QACf+D,KAAKkD,KAAK,YACnBiB,EAASnE,KAAKkD,KAAK,WAGdiB,I,uBAGT,SAAUlI,GACJ+D,KAAKxF,OAASsD,GAAagE,QAAqB,KAAX7F,GAAkBmI,OAAOnI,KAChEA,GAAUA,GAGZ+D,KAAK/D,OAASA,I,sBAGhB,SAASL,GACFoE,KAAK8C,KACR9C,KAAK8C,GAAK,KAAOlH,GAGnBoE,KAAKpE,MAAQA,I,0BAGf,WAAe,WACb,GAAIoE,KAAKD,QAAS,CAChB,IAAMkE,EAAUD,MAAMC,QAAQjE,KAAK/D,QAC/BoI,EAAc,EAalB,GAXArE,KAAKD,QAAQuE,SAAQ,SAAA/L,GACnB,IAAMgM,EAAchM,EAAEiM,cAElB,EAAKvI,SAAWsI,GAAgBN,IAAiD,IAAtC,EAAKhI,OAAOwI,QAAQF,IACjEhM,EAAEkK,UAAW,IACX4B,GAEF9L,EAAEkK,UAAW,KAIbzC,KAAKoD,WAAY,CACnB,IAAIsB,EAAc,KAEdT,EACEjE,KAAK/D,OAAOxF,QAAUuJ,KAAK/D,OAAOxF,SAAW4N,IAC/CK,EAAc1E,KAAK/D,OAAO+D,KAAK/D,OAAOxF,OAAS,KAEyB,IAAjEuJ,KAAKD,QAAQ4E,KAAI,SAAApM,GAAC,OAAIA,EAAEiM,iBAAeC,QAAQzE,KAAK/D,UAC7DyI,EAAc1E,KAAK/D,QAGD,OAAhByI,IACF1E,KAAKqD,MAAQqB,O,yBAMrB,WACE1E,KAAK+C,UAAW,EAChB/C,KAAK/D,OAAS+D,KAAKnB,SAAW,GAAK,KACnCmB,KAAKqD,MAAQ,KAEbrD,KAAKkE,iB,kCAGP,WACE,MAAO,CAACpG,GAAac,eAAgBd,GAAa+D,uBAAuB+C,SAAS5E,KAAKxF,U,SCjPnFV,MAAM,a,kCAUyBuI,MAAM,IAAIvJ,MAAM,GAAGsD,SAAA,GAASqG,SAAA,GAASoC,OAAA,I,2BAOtE,eAcO,QAdD/K,MAAM,gBAAc,CACxB,eAYM,OAZDiB,QAAQ,MAAM+H,GAAG,SACpB9H,MAAM,6BACNC,cAAY,+BACZC,EAAE,MACFC,EAAE,MACFG,QAAQ,yBACRwB,MAAA,GACAgI,YAAU,Y,CAEV,eAEI,UADF,eAAsU,QAAhU1M,EAAE,oU,oDA5BlB,eAiCO,OAjCP,GAiCO,CAhCL,eAaS,UAZP2B,IAAI,QACJD,MAAA,GACOhB,MAAO,EAAAuF,UACT,SAAM,8BAAE,EAAA0G,UAAA,EAAAA,SAAA,qBACR,UAAO,8BAAE,EAAAC,mBAAA,EAAAA,kBAAA,qBACT,QAAK,8BAAE,EAAAC,iBAAA,EAAAA,gBAAA,qBACL/G,SAAU,EAAApC,SAASoC,U,CAEZ,EAAApC,SAASoC,U,iBAAvB,eAA4F,SAA5F,GAA6E,M,0CAC7E,eAES,2BAFyB,EAAApC,SAASiE,SAAO,SAAlCmF,EAAQtJ,G,wBAAxB,eAES,UAFkDQ,SAAU8I,EAAO9I,SAAiBtD,MAAOoM,EAAOV,cAAsBpL,IAAG,IAAQwC,G,eACvIsJ,EAAOC,eAAW,S,cAGzB,eAiBO,aAhBL,eAA4H,QAAtHrL,MAAK,gBAAC,UAAS,mBAAmCgC,SAASG,QAAM,KAASH,SAASiH,a,eAAc,EAAAqC,aAAW,GAClH,OCZN,IACE3J,IAAQ,EACRD,IAAW,EAEY,qBAAd6J,WAAiD,qBAAbC,WAE7C7J,GAAQ4J,UAAUE,UAAUxE,MAAM,uBAAiE,IAAxCsE,UAAUE,UAAUd,QAAQ,QAAiB,eAAgBa,SACxH9J,GAAWC,IAAS4J,UAAUE,UAAUxE,MAAM,aAIzC,IAAMyE,GAAW,CACtBvP,KADsB,WAEpB,MAAO,CACLwF,SACAD,eCRW,IACbnD,KAAM,mBAENoN,MAAO,CACLtL,SAAU2F,GACVhE,SAAU+G,GACV9G,OAAQ2J,QACRtJ,SAAUsJ,QACVC,WAAY,CAACC,OAAQ5B,MAAO0B,QAAS5D,OAAQpL,SAG/CmP,OAAQ,CACNL,IAGFvP,KAfa,WAgBX,MAAO,CACL6P,OAAO,EACPzH,UAAW,KACXpC,OAAQ,KACR8J,cAAc,EACdC,aAAc,KACdC,kBAAmB,CAAC,YAAa,aAAc,SAAU,aACzDC,SAAS,EACTC,iBAAiB,EACjBtG,aAAc,OAIlBuG,QA7Ba,WA8BPpG,KAAKlE,SAASG,OAChB+D,KAAK3B,UAAY2B,KAAK/D,OAAS+D,KAAKlE,SAASG,OACpC+D,KAAKlE,SAAS+C,WACvBmB,KAAK3B,UAAY,KAIrBgI,QAAS,CAKPC,UALO,SAKGrK,GACR,OAAOA,GAGTsK,WATO,WAUL,IAAIC,EAAKxG,KAAKyG,MAAMC,MAGpB,MAAOF,GAAMA,EAAGG,IACdH,EAAKA,EAAGG,IAGV,OAAOH,GAGTI,SApBO,WAqBL5G,KAAKkG,SAAU,GAIjBW,WAzBO,SAyBIC,GACT9G,KAAKkG,SAAU,GAGjBa,MA7BO,WA8BL,IAAK/G,KAAKkG,QAAS,CACjB,IAAMM,EAAKxG,KAAKuG,aAEhBC,GAAMA,EAAGO,UAIbC,KArCO,WAsCL,IAAMR,EAAKxG,KAAKuG,aAEhBC,GAAMA,EAAGQ,QAGXC,UA3CO,SA2CGH,GACR9G,KAAK+F,cAAe,EACpBmB,aAAalH,KAAKmH,WAEdL,IACiB,UAAfA,EAAO1N,KAAoB0N,EAAO5G,UACpCF,KAAK6G,aAGmB,OAAtB7G,KAAKgG,eAG6C,IAAhDhG,KAAKiG,kBAAkBxB,QAAQqC,EAAO1N,OAA0D,IAA3C4G,KAAKgG,aAAavB,QAAQqC,EAAO1N,MACxF0N,EAAOM,mBAMfrC,SA9DO,SA8DE+B,GACP9G,KAAK8F,OAAQ,EACb9F,KAAK3B,UAAYyI,EAAO1H,OAAOtG,MAE/BkH,KAAKiH,YACLjH,KAAKqH,UAAUrH,KAAK3B,YAGtBC,QAtEO,WAuEL0B,KAAKsH,YAGPA,SA1EO,WA2ELtH,KAAK+F,cAAe,EAEpB/F,KAAK3B,UAAY2B,KAAKsG,UAAUtG,KAAK3B,WACrC2B,KAAKqH,UAAUrH,KAAK3B,WACpB2B,KAAKuH,UAAYvH,KAAKgH,OAAShH,KAAK+G,SAGtCM,UAlFO,SAkFGpL,GACR+D,KAAKlE,SAASuL,UAAUpL,GAExB+D,KAAK/D,OAAS+D,KAAKlE,SAASG,OAC5B+D,KAAKlE,SAASiH,SAAW/C,KAAKuH,UAE9BvH,KAAKwH,MAAM,oBAAqBxH,KAAK/D,SAGvC2D,YA3FO,WA4FL,OAAOI,KAAK8F,OAAS9F,KAAK+F,eAAiB/F,KAAKuH,WAGlDA,QA/FO,WAgGL,QAAKvH,KAAKlE,SAASoC,UAAa8B,KAAKyH,WAAYzH,KAAK8F,UAIlD9F,KAAK0H,YAWXA,SA/GO,WAgHL,OAAQ1H,KAAKlE,SAASoC,UAAY8B,KAAKyH,WAI3CE,SAAU,CACRvH,YADQ,WAEN,OAAOJ,KAAKlE,SAASsE,aAAeJ,KAAK7F,SAASiG,aAGpDqH,SALQ,WAMN,GAAuB,OAAnBzH,KAAK3B,UAAoB,CAC3B,IAAIuJ,EAAI5H,KAAK3B,UAEb,OAAIuJ,EAAEC,KAEGD,EAAEC,OAAOpR,OAAS,GAGvBuN,MAAMC,QAAQ2D,IAETA,EAAEnR,OAAS,EAOtB,OAAO,KC1Lf,MAAMqR,GAAc,GAEL,UH0CE,IACbC,QAASC,GAET3P,KAAMyF,GAAa4D,SAEnBiG,SAAU,CACRvC,YADQ,WAEN,IAAK,IAAI7O,EAAI,EAAGA,EAAIyJ,KAAKlE,SAASiE,QAAQtJ,OAAQF,IAAK,CACrD,IAAI2O,EAASlF,KAAKlE,SAASiE,QAAQxJ,GAEnC,GAAI2O,EAAOV,gBAAkBxE,KAAK3B,UAChC,OAAO6G,EAAOC,cAIlB,OAAOnF,KAAKlE,SAASsE,cAIzBiG,QAAS,CACPrB,kBADO,SACW8B,GACG,cAAfA,EAAO1N,KAAsC,YAAf0N,EAAO1N,IACvC4G,KAAKqH,UAAUrH,KAAK3B,WACI,UAAfyI,EAAO1N,KAAmB4G,KAAKyH,WACxCzH,KAAKkG,SAAU,EACflG,KAAKgH,SAIT/B,gBAVO,SAUS6B,GACK,UAAfA,EAAO1N,KAAmB4G,KAAKuH,YAAcvH,KAAK5D,WACpD0K,EAAOmB,kBACPjI,KAAKsH,WACLtH,KAAKwH,MAAM,Y,wBI3ErB,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,MAErD,U,+KCNb,eAsCO,QAtCMU,mBAA2B,SAAT,EAAAC,UAAuB,EAAA/H,YAAW,M,CAEvD,EAAAtE,SAASqH,M,iBADjB,eAkBE,G,MAhBApJ,IAAI,QACGoJ,KAAM,EAAArH,SAASqH,KACfiF,QAAQ,EACR5N,KAAM,EAAA2N,UACNrP,MAAO,EAAA6M,WACPzH,SAAU,EAAApC,SAASoC,SACrB,UAAS,EAAA+I,UACT,QAAK,CAAE,EAAAlC,S,8BAGc,EAAAzG,QAAO,wB,8BACT,EAAAA,QAAO,uBAH1B,QAAO,EAAAsI,SACP,OAAM,EAAAC,WAGJzG,YAAa,EAAAA,YACboD,IAAK,EAAA1H,SAAS0H,IACdC,IAAK,EAAA3H,SAAS2H,IAChB,SAAQ,EAAAsB,U,4IAEf,eAiBE,S,MAfAhL,IAAI,QACGS,KAAM,EAAA2N,UACNrP,MAAO,EAAA6M,WACPzH,SAAU,EAAApC,SAASoC,SACrB,UAAO,8BAAE,EAAA+I,WAAA,EAAAA,UAAA,qBACT,QAAK,C,8BAAE,EAAAlC,UAAA,EAAAA,SAAA,qB,6DACc,EAAAzG,SAAA,EAAAA,QAAA,qBAAO,yB,6DACT,EAAAA,SAAA,EAAAA,QAAA,qBAAO,wBAC1B,QAAK,8BAAE,EAAAsI,UAAA,EAAAA,SAAA,qBACP,OAAI,8BAAE,EAAAC,YAAA,EAAAA,WAAA,qBACJrD,IAAK,EAAA1H,SAAS0H,IACdC,IAAK,EAAA3H,SAAS2H,IAChB,SAAM,8BAAE,EAAAsB,UAAA,EAAAA,SAAA,qBACN3E,YAAa,EAAAA,YACbiI,UAAW,EAAAvM,SAAS4H,W,qCAgBhB,IACbqE,QAASC,GACT3P,KAAMyF,GAAamE,KACnBqG,WAAY,CACVC,QAAA,SAGFtS,KAPa,WAQX,MAAO,CACLkS,UAAW,OACXhC,iBAAiB,IAIrBE,QAAS,CACPqB,SADO,WAEL,OAAI1H,KAAKlE,SAASqH,MAAQnD,KAAKyH,SACtBzH,KAAKwI,gBAGNxI,KAAKlE,SAASoC,UAAY8B,KAAKyH,UAGzCe,aATO,WASQ,WACb,OAAIxE,MAAMC,QAAQjE,KAAKlE,SAASqH,MACvBnD,KAAKlE,SAASqH,KAAKsF,MAAK,SAAAtF,GAAG,OAAKA,EAAK1M,SAAW,EAAK4H,UAAU5H,UAGjEuJ,KAAK3B,UAAU5H,SAAWuJ,KAAKlE,SAASqH,KAAK1M,UC5E5D,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,MAErD,UCGE,IACbsR,QAASW,GACTrQ,KAAMyF,GAAa6D,MACnB1L,KAHa,WAIX,MAAO,CACLkS,UAAW,UAGf9B,QAAS,CACPqB,SADO,WAEL,OAAI1H,KAAKyH,SACA,iBAAiBkB,KAAK3I,KAAK3B,YAG5B2B,KAAKlE,SAASoC,YCrB9B,MAAM,GAAc,GAEL,U,2FCJb,eAgBO,aAfL,eAcE,GAbAnE,IAAI,QACJ+J,KAAK,IACEhL,MAAO,EAAA6M,WACPzH,SAAU,EAAApC,SAASoC,SACrB,UAAO,CAAE,EAAA+I,U,8BAEY,EAAA2B,YAAW,uBADhC,QAAK,CAAE,EAAA7D,S,8BAEoB,EAAAzG,QAAO,gC,8BACf,EAAAA,QAAO,uBAC1B,QAAO,EAAAsI,SACP,OAAM,EAAAC,WACJzG,YAAa,EAAAA,YACbiI,UAAW,EAAAvM,SAAS4H,W,mHAgBhB,IACbqE,QAASC,GAET3P,KAAMyF,GAAaW,SAEnB6J,WAAY,CACVO,oBAAA,MAGF5S,KATa,WAUX,MAAO,CACLkQ,iBAAiB,IAIrBC,QAfa,WAgBXzM,OAAOmP,iBAAiB,SAAU9I,KAAK+I,mBAGzCC,cAnBa,WAoBXrP,OAAOsP,oBAAoB,SAAUjJ,KAAK+I,mBAG5C1C,QAAS,CACP0C,iBADO,WAEL/I,KAAKyG,MAAMC,MAAMwC,UAGnBrC,WALO,SAKIC,IACLA,GAAW9G,KAAKxE,WAClBwE,KAAKkG,SAAU,IAInB0C,YAXO,SAWK9B,GACL9G,KAAKxE,UACRsL,EAAOM,kBAIX9I,QAjBO,WAkBL0B,KAAKsH,WAEDtH,KAAKxE,UACPwE,KAAK+G,WCtEf,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,MAErD,U,ICNRjN,MAAM,iB,sCAUCA,MAAM,W,qBAGPA,MAAM,gB,IACHA,MAAM,S,UACsBA,MAAM,W,sBAWrCA,MAAM,gB,UACHA,MAAM,S,UAYqBA,MAAM,c,IAC/BA,MAAM,W,UAEDA,MAAM,W,iDA1C3B,eA8CM,MA9CN,GA8CM,CA7CJ,eA4CK,MA5CDA,MAAK,gBAAC,WAAU,cAA8B,EAAAgC,SAAS+C,YAAW3B,KAAK,W,qBACzE,eAeK,2BAduB,EAAApB,SAASiE,SAAO,SAAlCmF,EAAQtJ,G,wBADlB,eAeK,MAbE,QAAK,mCAAU,EAAAuN,aAAajE,KAAM,aAChCpL,MAAK,6BAAiBoL,EAAOzC,WAC7BrJ,IAAG,IAAQwC,EACXjB,aAAY,EAAAyO,SAASxN,GAC5BsB,KAAK,U,CAEuB,EAAAmM,WAAanE,EAAOxC,U,iBAAhD,eAEO,OAFP,GAEO,CADL,eAA+D,OAAnD4G,IAAKpE,EAAOxC,SAAiB6G,IAAKrE,EAAOvC,U,oCAEvD,eAGM,MAHN,GAGM,CAFJ,eAAoD,OAApD,GAAoD,eAA7B,EAAA6G,aAAa5N,IAAK,GAC7BsJ,EAAOC,e,iBAAnB,eAAmF,OAAnF,GAAmF,eAA9BD,EAAOC,eAAW,I,0CAKlE,EAAAkE,WAAa,EAAAvN,SAASsH,Y,iBAF/B,eA0BK,M,MAzBHtJ,MAAK,gBAAC,UAAS,cAGc,EAAAgC,SAASuH,MAAK,UAAa,EAAAoG,gBADnD,QAAK,8CAAU,EAAAC,gBAAA,EAAAA,eAAA,qBAAc,cAE3B/O,aAAY,EAAAR,SAASoG,eAC5BrD,KAAK,U,CAEL,eAiBM,MAjBN,GAiBM,CAhBuB,EAAAuM,a,wCAA3B,eAA2F,OAA3F,GAA2F,eAA/C,EAAAD,aAAa,EAAA1N,SAASiE,QAAQtJ,SAAM,IAExE,EAAAgT,a,iCADR,eAUE,S,2DARS,EAAA3N,SAASuH,MAAK,IACvB7I,KAAK,OACLT,IAAI,aACC,OAAI,8BAAE,EAAA4P,eAAA,EAAAA,cAAA,qBACN,QAAK,C,6DAAgB,EAAAA,eAAA,EAAAA,cAAA,qBAAa,yB,8BAC3B,EAAAC,eAAA,EAAAA,cAAA,sBACP,SAAM,8BAAE,EAAAA,eAAA,EAAAA,cAAA,qBACbvB,UAAU,O,oBAPD,EAAAvM,SAASuH,SASH,EAAAvH,SAASuH,O,iBAA1B,eAEO,OAFP,GAEO,CADL,eAAiD,OAAjD,GAAiD,eAAxB,EAAAvH,SAASuH,OAAK,O,iBAEzC,eAA8D,OAA9D,GAA8D,eAA9B,EAAAlJ,SAASgG,aAAW,O,oCAiB7C,QACb4H,QAASC,GACT3P,KAAMyF,GAAac,eAEnB3I,KAJa,WAKX,MAAO,CACLwT,cAAc,EACdJ,WAAW,IAIfjD,QAXa,WAYXpG,KAAK6J,kBAGPb,cAfa,WAgBXhJ,KAAK8J,qBAGPC,MAAO,CACLhO,OADK,SACEjD,GACDA,GACFkH,KAAK6J,iBAED7J,KAAKlE,SAAS+C,UAAYmB,KAAKlE,SAASiH,WAC1C/C,KAAK+F,cAAe,IAGtB/F,KAAK8J,sBAKXzD,QAAS,CACPwD,eADO,WAEL7J,KAAK8J,oBACLxE,SAASwD,iBAAiB,QAAS9I,KAAKgK,gBAG1CF,kBANO,WAOLxE,SAAS2D,oBAAoB,QAASjJ,KAAKgK,gBAM7CA,cAbO,SAaOlD,GACZ,GAAI9G,KAAKjE,SAAWiE,KAAKyJ,cAAgB3C,EAAO1N,KAA6B,IAAtB0N,EAAO1N,IAAI3C,OAAc,CAC9E,IAAIwT,EAAUnD,EAAO1N,IAAI8Q,cAAcC,WAAW,GAElD,GAAIF,GAAW,IAAMA,GAAW,GAAI,CAClC,IAAIrO,EAAQqO,EAAU,GAEtB,GAAIrO,GAAS,EAAG,CACd,IAAIsJ,EAASlF,KAAKlE,SAASiE,QAAQnE,GAE/BsJ,EACFlF,KAAKmJ,aAAajE,GACTlF,KAAKlE,SAASsH,YAAcxH,IAAUoE,KAAKlE,SAASiE,QAAQtJ,QACrEuJ,KAAK0J,qBAOfN,SAjCO,SAiCExN,GACP,OAAOoE,KAAK7F,SAASmG,mBAAmBvD,QAAQ,UAAWiD,KAAKwJ,aAAa5N,KAG/E4N,aArCO,SAqCM5N,GACX,IAAMxC,EAAM,GAAKwC,EAEjB,OAAIxC,GAAO,GACFwM,OAAOwE,aAAahR,GAGtB,IAGT+P,aA/CO,SA+CMjE,GACX,IAAKlF,KAAKlE,SAAS+C,SAAU,CACvBmB,KAAKlE,SAASsH,aAChBpD,KAAKlE,SAASuH,MAAQrD,KAAK3B,UAAY,KACvC2B,KAAKqH,UAAUrH,KAAK3B,YAGtB,IAAK,IAAI9H,EAAI,EAAGA,EAAIyJ,KAAKlE,SAASiE,QAAQtJ,OAAQF,IAAK,CACrD,IAAIgC,EAAIyH,KAAKlE,SAASiE,QAAQxJ,GAE1BgC,EAAEkK,UACJzC,KAAKqK,cAAc9R,IAKzByH,KAAKqK,cAAcnF,IAGrBmF,cAlEO,SAkEOnF,GACZ,IAAMX,EAAcW,EAAOV,cAE3BU,EAAOoF,SAEHtK,KAAKlE,SAAS+C,UAChBmB,KAAK+F,cAAe,EAEfb,EAAOzC,UAEwC,IAAzCzC,KAAK3B,UAAUoG,QAAQF,IAChCvE,KAAK3B,UAAUtH,KAAKwN,GAFpBvE,KAAKuK,cAAchG,IAKrBvE,KAAK3B,UAAY6G,EAAOzC,SAAW8B,EAAc,KAI/CvE,KAAKuH,WAAavH,KAAKlE,SAAS6H,mBAAqB3D,KAAKlE,SAAS+C,WAAamB,KAAK5D,UACvF4D,KAAKwH,MAAM,QAGbxH,KAAKqH,UAAUrH,KAAK3B,YAGtBkM,cA3FO,SA2FOzR,GACZ,IAAM8C,EAAQoE,KAAK3B,UAAUoG,QAAQ3L,IAEtB,IAAX8C,GACFoE,KAAK3B,UAAU1G,OAAOiE,EAAO,IAIjC8N,eAnGO,WAmGU,WACf1J,KAAKyJ,cAAe,EACpBzJ,KAAK+F,cAAe,EAEpB/F,KAAKwK,WAAU,WACb,EAAK/D,MAAMgE,WAAW1D,YAI1B6C,cA5GO,WA6GL,GAAI5J,KAAKyJ,aAAc,CACrB,IACE3Q,EAAQ,GACR4R,EAAO1K,KAETA,KAAKlE,SAASiE,QAAQuE,SAAQ,SAASY,GACjCA,EAAOzC,WACLiI,EAAK5O,SAAS+C,SAChB/F,EAAM/B,KAAKmO,EAAOV,eAElBU,EAAOoF,aAKTtK,KAAKlE,SAASuH,OAASrD,KAAKlE,SAAS+C,SACvC/F,EAAM/B,KAAKiJ,KAAKlE,SAASuH,OACfrD,KAAKlE,SAAS+C,WACxB/F,EAAQkH,KAAKlE,SAASuH,OAGxBrD,KAAK3B,UAAYvF,EACjBkH,KAAKqH,UAAUrH,KAAK3B,aAIxBsL,cAvIO,WAwIL3J,KAAKyJ,cAAe,IAIxB9B,SAAU,CACRF,SADQ,WAEN,QAAIzH,KAAKlE,SAASiE,QAAQ4K,QAAO,SAAApS,GAAA,OAAKA,EAAEkK,YAAUhM,UAI9CuJ,KAAKlE,SAASsH,aACTpD,KAAKlE,SAASuH,OAASrD,KAAKlE,SAASuH,MAAMwE,OAAOpR,OAAS,MC3O5E,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,MAErD,UCGE,IACbsR,QAAS6C,GACTvS,KAAMyF,GAAa+D,sBAEnB5L,KAJa,WAKX,MAAO,CACLoT,WAAW,KCbnB,MAAM,GAAc,GAEL,UCKE,IACbtB,QAASW,GACTrQ,KAAMyF,GAAagE,OAEnB7L,KAJa,WAKX,MAAO,CACLkS,UAAW,MACXnC,aAAc,iBAIlBK,QAAS,CACPqB,SADO,WAEL,QAA0B,OAAtB1H,KAAKlE,SAAS0H,MAAiBY,MAAMpE,KAAKlE,SAAS0H,OAASxD,KAAK3B,WAAa2B,KAAKlE,SAAS0H,SAItE,OAAtBxD,KAAKlE,SAAS2H,MAAiBW,MAAMpE,KAAKlE,SAAS2H,OAASzD,KAAK3B,WAAa2B,KAAKlE,SAAS2H,OAI5FzD,KAAKyH,SACHzH,KAAKlE,SAASqH,KACTnD,KAAKwI,gBAGNpE,OAAOpE,KAAK3B,YAGd2B,KAAKlE,SAASoC,UAAY8B,KAAKyH,cCpC/C,MAAM,GAAc,GAEL,UCKE,IACbM,QAASW,GACTrQ,KAAMyF,GAAaiE,SACnB9L,KAHa,WAIX,MAAO,CACLkS,UAAW,cCZnB,MAAM,GAAc,GAEL,UCME,IACbJ,QAASW,GACTrQ,KAAMyF,GAAakE,MACnB/L,KAHa,WAIX,MAAO,CACLkS,UAAW,MACXhC,iBAAiB,KCdzB,MAAM,GAAc,GAEL,U,UCJRrM,MAAM,a,IACHA,MAAM,kB,gCADe,EAAAgC,SAASwH,S,iBAAtC,eAEM,MAFN,GAEM,CADJ,eAA0D,OAA1D,GAA0D,eAA1B,EAAAxH,SAASwH,SAAO,M,sBAenC,QACbyE,QAASC,GACT3P,KAAMyF,GAAaC,aACnBsI,QAAS,CACP/H,QADO,WAEL0B,KAAK8F,OAAQ,EAEb9F,KAAKsH,YAGPC,QAPO,WAQL,OAAO,KCvBf,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,MAErD,UCGE,IACbQ,QAASW,GACTrQ,KAAMyF,GAAaoE,IACnBjM,KAHa,WAIX,MAAO,CACLkS,UAAW,QAGf9B,QAAS,CACPC,UADO,SACGrK,GAOR,OANIA,IAAqC,IAA3BA,EAAOwI,QAAQ,SAG3BxI,EAAS,WAAaA,GAGjBA,GAGTyL,SAXO,WAYL,GAAI1H,KAAKyH,SACP,IAGE,OAFA,IAAIoD,IAAI7K,KAAKsG,UAAUtG,KAAK3B,aAErB,EACP,MAAMyM,GAEN,OAAO,EAIX,OAAQ9K,KAAKlE,SAASoC,YCtC9B,MAAM,GAAc,GAEL,UCME,IACb6J,QAASW,GACTrQ,KAAMyF,GAAa2D,KACnBxL,KAHa,WAIX,MAAO,CACLkS,UAAW,SAGf9B,QAAS,CACPqB,SADO,WAEL,QAAI1H,KAAKlE,SAAS0H,KAAOxD,KAAK3B,UAAY2B,KAAKlE,SAAS0H,SAIpDxD,KAAKlE,SAAS2H,KAAOzD,KAAK3B,UAAY2B,KAAKlE,SAAS2H,QAIhDzD,KAAKlE,SAASoC,UAAY8B,KAAKyH,cC1B/C,MAAM,GAAc,GAEL,U,6FCJb,eAYE,SAXA1N,IAAI,QACJS,KAAK,OACEoJ,OAAQ,EAAA9H,SAAS8H,OACjB/E,SAAU,EAAA/C,SAAS+C,SACnB/F,MAAO,EAAA6M,WACPzH,SAAU,EAAApC,SAASoC,SACrB,QAAK,C,6DAAgB,EAAAI,SAAA,EAAAA,QAAA,qBAAO,yB,6DACT,EAAAA,SAAA,EAAAA,QAAA,qBAAO,wBAC1B,QAAK,8BAAE,EAAAsI,UAAA,EAAAA,SAAA,qBACP,OAAI,8BAAE,EAAAC,YAAA,EAAAA,WAAA,qBACN,SAAM,8BAAE,EAAA9B,UAAA,EAAAA,SAAA,sB,YAcA,QACbgD,QAASW,GAETrQ,KAAMyF,GAAa8D,KAEnByE,QAAS,CACPgB,UADO,SACGpL,GACR+D,KAAKlE,SAASuL,UAAUrH,KAAKyG,MAAMC,MAAMqE,OAEzC/K,KAAK/D,OAASA,EACd+D,KAAKlE,SAASiH,SAAW/C,KAAKuH,UAE9BvH,KAAKwH,MAAM,oBAAqBvL,IAGlC2D,YAVO,WAWL,OAA6B,OAAtBI,KAAKH,cAGdmL,gBAdO,SAcSC,GACd,IAAMC,EAAY,IAAMD,EAAK5S,KAAK8S,MAAM,KAAKC,MAE7C,SAAIpL,KAAKqL,8BAA+BrL,KAAKqL,4BAA4B1C,KAAKuC,QAI1ElL,KAAKsL,yBAA0BtL,KAAKsL,uBAAuB3C,KAAKsC,EAAKzQ,QAO3EkN,SA5BO,WA4BI,WACT,GAAI1H,KAAKlE,SAASoC,WAAa8B,KAAKyH,SAClC,OAAO,EAGT,IACEsD,EAAQ/K,KAAKyG,MAAMC,MAAMqE,MACzBQ,EAAWR,EAAMtU,OAEnB,GAAIuJ,KAAKlE,SAAS8H,SACXI,MAAMwH,KAAKT,GAAOU,OAAM,SAAAR,GAAG,OAAK,EAAKD,gBAAgBC,MAKxD,OAJAjL,KAAKH,aAAeG,KAAK7F,SAASU,aAAamF,KAAK7F,SAASqG,sBAAuB,CAClFkL,UAAW1L,KAAKlE,SAAS8H,UAGpB,EAIX,GAAI5D,KAAKlE,SAAS+C,SAAU,CAC1B,GAA0B,OAAtBmB,KAAKlE,SAAS0H,KAAgB+H,GAAYvL,KAAKlE,SAAS0H,IAK1D,OAJAxD,KAAKH,aAAeG,KAAK7F,SAASU,aAAamF,KAAK7F,SAASuG,cAAe,CAC1E8C,IAAKxD,KAAKlE,SAAS0H,OAGd,EAGT,GAA0B,OAAtBxD,KAAKlE,SAAS2H,KAAgB8H,GAAYvL,KAAKlE,SAAS2H,IAK1D,OAJAzD,KAAKH,aAAeG,KAAK7F,SAASU,aAAamF,KAAK7F,SAASwG,cAAe,CAC1E8C,IAAKzD,KAAKlE,SAAS2H,OAGd,EAIX,GAA8B,OAA1BzD,KAAKlE,SAAS+H,QAAkB,CAClC,IAAM8H,EACJ3H,MAAMwH,KAAKT,GAAOa,QAAO,SAACC,EAASZ,GAAV,OAAmBY,EAAUZ,EAAKa,OAAM,GAEnE,GAAIH,GAAY3L,KAAKlE,SAAS+H,QAK5B,OAJA7D,KAAKH,aAAeG,KAAK7F,SAASU,aAAamF,KAAK7F,SAASsG,iBAAkB,CAC7EqL,KAAM9L,KAAK7F,SAAS4R,eAAe/L,KAAKlE,SAAS+H,YAG5C,EAMX,OAFA7D,KAAKH,aAAe,KAEbG,KAAKyG,MAAMC,MAAMsF,kBAI5BrE,SAAU,CACRsE,YADQ,WAEN,OAAIjM,KAAKlE,SAAS8H,OACT5D,KAAKlE,SAAS8H,OAAOuH,MAAM,KAG7B,IAGTe,kBATQ,WAUN,OAAOlM,KAAKiM,YAAYtB,QAAO,SAAA/G,GAAK,MAAmB,MAAdA,EAAO,OAGlD0H,uBAbQ,WAcN,OAAItL,KAAKkM,kBAAkBzV,OAClB,IAAI0V,OAAOnM,KAAKkM,kBAAkBE,KAAK,KAAKrP,QAAQ,MAAO,OAG7D,MAGTsP,uBArBQ,WAsBN,OAAOrM,KAAKiM,YAAYtB,QAAO,SAAA/G,GAAK,MAAmB,MAAdA,EAAO,OAGlDyH,4BAzBQ,WA0BN,OAAIrL,KAAKqM,uBAAuB5V,OACvB,IAAI0V,OAAOnM,KAAKqM,uBAAuBD,KAAK,MAG9C,QC5If,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,MAErD,U,ICNRtS,MAAM,iB,GAOH,eAAS,mB,IAMDA,MAAM,kB,IAUVA,MAAM,2B,IACFA,MAAM,kB,uBAQmBA,MAAM,gB,IAC5BA,MAAM,iC,yEAaX,eAOO,QAPDA,MAAM,6BAA2B,CACrC,eAKM,OAJJwB,QAAQ,YACRxB,MAAM,2B,CAEN,eAAuC,UAA/BnB,EAAE,IAAI2T,GAAG,KAAKC,GAAG,W,aAKrBzS,MAAM,gB,IACTA,MAAM,oC,kEAYX,eAOO,QAPDA,MAAM,gCAA8B,CACxC,eAKM,OAJJwB,QAAQ,YACRxB,MAAM,8B,CAEN,eAAgD,QAA1CsB,MAAM,KAAKC,OAAO,KAAKH,EAAE,IAAIC,EAAE,U,oDA1EvD,eAmFM,MAnFN,GAmFM,CAlFJ,eAiFQ,SAhFNrB,MAAK,gBAAC,iBAAgB,qBACe,EAAAgC,SAAS+C,a,CAE9C,eAWQ,cAVN,eASK,WARH,I,mBACA,eAMK,2BALuB,EAAA/C,SAASiI,SAAO,SAAlCyI,EAAQ5Q,G,wBADlB,eAMK,MAJIxC,IAAG,IAAQwC,EAClB9B,MAAM,8B,CAEN,eAAsD,OAAtD,GAAsD,eAAtB0S,EAAOnK,OAAK,Q,UAIlD,eAgEQ,e,mBA/DN,eA8DK,2BA7DoB,EAAAvG,SAASgI,MAAI,SAA5B2I,EAAK7Q,G,wBADf,eA8DK,MA5DIxC,IAAG,IAAQwC,EAClB9B,MAAM,e,CAEN,eAEK,KAFL,GAEK,CADH,eAAmD,OAAnD,GAAmD,eAAnB2S,EAAIpK,OAAK,M,mBAE3C,eAqDK,2BApDuB,EAAAvG,SAASiI,SAAO,SAAlCyI,EAAQ5Q,G,wBADlB,eAqDK,MAnDIxC,IAAG,IAAQwC,EACXqC,MAAOuO,EAAOnK,MACrBvI,MAAM,8B,CAEM,EAAAgC,SAAS+C,U,iBAwBrB,eAsBM,MAtBN,GAsBM,CArBJ,eAoBQ,QApBR,GAoBQ,C,eAnBN,eAUE,SATArE,KAAK,WACET,IAAK,SAAAyM,GAAE,OAAI,EAAAkG,UAAU3V,KAAKyP,IAC1B1D,GAAE,IAAQlH,EAAK,IAAS6Q,EAAI3J,GAC5BnI,aAAY8R,EAAIpK,MAChBsK,UAASF,EAAI3J,GACbhK,MAAO0T,EAAO1T,MACrBgB,MAAM,qC,yCACG,EAAA2I,SAASgK,EAAI3J,IAAE,GACnB,SAAM,8BAAE,EAAAiC,UAAA,EAAAA,SAAA,sB,qBADJ,EAAAtC,SAASgK,EAAI3J,OAGxB,S,iBArCJ,eAuBM,MAvBN,GAuBM,CAtBJ,eAqBQ,QArBR,GAqBQ,C,eApBN,eAWE,SAVAtI,KAAK,QACET,IAAK,SAAAyM,GAAE,OAAI,EAAAkG,UAAU3V,KAAKyP,IAC1BnO,KAAMoU,EAAI3J,GACVA,GAAE,IAAQlH,EAAK,IAAS6Q,EAAI3J,GAC5BnI,aAAY8R,EAAIpK,MAChBsK,UAASF,EAAI3J,GACbhK,MAAO0T,EAAO1T,M,yCACZ,EAAA2J,SAASgK,EAAI3J,IAAE,GACxBhJ,MAAM,kCACD,SAAM,8BAAE,EAAAiL,UAAA,EAAAA,SAAA,sB,qBAFJ,EAAAtC,SAASgK,EAAI3J,OAIxB,S,gnEAkDC,QACbiF,QAASC,GAET3P,KAAMyF,GAAaqE,OAEnBlM,KALa,WAMX,MAAO,CACLwM,SAAU,GACViK,UAAW,KAIfE,YAZa,WAcX,GAAI5M,KAAKlE,SAAS+C,SAAU,YACVmB,KAAKlE,SAASgI,MADJ,IAC1B,2BAAoC,KAA3B2I,EAA2B,QAClCzM,KAAKyC,SAASgK,EAAI3J,IAAM9C,KAAKlE,SAASG,QAAU+D,KAAKlE,SAASG,OAAOwQ,EAAI3J,IAAjD,GAA2D9C,KAAKlE,SAASG,OAAOwQ,EAAI3J,KAAO,IAF3F,oCAIjB9C,KAAKlE,SAASG,SACvB+D,KAAKyC,SAAL,MAAoBzC,KAAKlE,SAASG,UAItC4Q,aAvBa,WAwBX7M,KAAK0M,UAAY,IAGnBrG,QAAS,CACPtB,SADO,SACE+B,GACP9G,KAAK8F,OAAQ,EACb9F,KAAK3B,UAAY2B,KAAKyC,SACtBzC,KAAKiH,YACLjH,KAAKqH,UAAUrH,KAAK3B,YAGtBqJ,SARO,WASL,IAAK1H,KAAKlE,SAASoC,SACjB,OAAO,EAGT,IAAM4O,EAAU,SAAAC,GAAK,OAAKA,EAAOtE,MAAK,SAAA/B,GAAI,OAAKA,EAAMoG,YAErD,QAAKpW,OAAOsW,OAAOhN,KAAKiN,aAAaxB,OAAM,SAAA3S,GAAI,OAAKgU,EAAQhU,OAO9DyN,WAtBO,WAuBL,OAAOvG,KAAK0M,UAAU,KAI1B/E,SAAU,CACRsF,YADQ,WAEN,IADY,EACNA,EAAc,GADR,KAIIjN,KAAKlE,SAASgI,MAJlB,IAIZ,2BAAoC,KAA3B2I,EAA2B,QAClCQ,EAAYR,EAAI3J,IAAM,IALZ,8BAYZ,OAJA9C,KAAK0M,UAAUpI,SAAQ,SAAAoC,GACrBuG,EAAYvG,EAAMwG,QAAQpK,IAAI/L,KAAK2P,MAG9BuG,KC/Jf,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,MAErD,UjCgHE,IACb5U,KAAM,mBAENiQ,WAAY,CACV6E,iBAAA,GACAC,qBAAA,GACAC,kBAAA,GACAC,qBAAA,GACAC,2BAAA,GACAC,kCAAA,GACAC,mBAAA,GACAC,qBAAA,GACAC,kBAAA,GACAC,yBAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,gBAAA,GACAC,mBAAA,IAGFvI,MAAO,CACL3J,SAAU+G,GACV1I,SAAU2F,GACVhH,MAAO,CAAC8M,OAAQ5B,MAAO0B,QAAS5D,OAAQpL,QACxCqF,OAAQ,CACNvB,KAAMkL,QACNuI,SAAS,GAEX9R,QAAS,CACP3B,KAAMkL,QACNuI,SAAS,GAEX7R,SAAU,CACR5B,KAAMkL,QACNuI,SAAS,GAEX3R,UAAW,CACT9B,KAAMkL,QACNuI,SAAS,IAIbpI,OAAQ,CACNL,IAGFvP,KA9Ca,WA+CX,MAAO,CACL6H,aAAcA,GACdO,UAAW,KACX6P,WAAW,IAIf9H,QAtDa,WAuDXpG,KAAK1D,WAAa0D,KAAKmO,aAEvBnO,KAAK3B,UAAY2B,KAAKlE,SAASG,OAE/B+D,KAAKyG,MAAM2H,SAAStF,iBAAiB,eAAgB9I,KAAKqO,iBAG5DrF,cA9Da,WA+DXhJ,KAAKyG,MAAM2H,SAASnF,oBAAoB,eAAgBjJ,KAAKqO,iBAG/DhI,QAAS,CAIP8H,WAJO,WAKL,IAAM3H,EAAKxG,KAAKyG,MAAM6H,kBAEtB9H,GAAMA,EAAGO,SAGXsH,eAVO,WAWLrO,KAAK1D,WAAa0D,KAAKmO,cAGzBI,YAdO,WAeL,IAAM5S,EAAIqE,KAAKyG,MAAM6H,kBAErB,OAAO3S,GAAKA,EAAEwK,kBAAoBxK,EAAEuK,SAGtCsI,YApBO,WAqBKxO,KAAKyG,MAAM6H,kBAEjBtO,KAAKuO,eACPvO,KAAKmO,cAOT7P,QA/BO,SA+BCwI,GACN9G,KAAKyO,YAAYzO,KAAK0O,aAGxBC,MAnCO,SAmCD7H,GACJ9G,KAAKyO,YAAYzO,KAAK4O,gBAGxBH,YAvCO,SAuCKI,GAAI,WACRlT,EAAIqE,KAAKyG,MAAM6H,kBAEjB3S,EAAE4L,WAAavH,KAAKlE,SAASgT,wBAA0B9O,KAAKlE,SAAS6H,mBAAsB3D,KAAKlE,SAAS+C,UAC3GmB,KAAKwH,MAAM,WAAW,GAEtBxH,KAAK+O,UAAS,WACZF,EAAGlT,GACH,EAAK6L,MAAM,WAAW,KACrB,MAEHqH,EAAGlT,IAIP+S,WAtDO,SAsDI/S,GACLA,IACGA,EAAEuK,SACLlG,KAAKwH,MAAM,SAAU7L,GAGvBA,EAAE2C,YAINsQ,cAhEO,SAgEOjT,GACRA,GAAKqE,KAAKlE,SAAStB,OAASsD,GAAa2D,OAC3CzB,KAAKwO,cACLxO,KAAKwH,MAAM,SAAU7L,GAErBA,EAAE2C,YAINyQ,SAzEO,SAyEEF,EAAIG,GACX,IAAIC,EAGJ,OAFAjP,KAAKkO,WAAY,EAET,WACNhH,aAAa+H,GACbA,EAAgBC,WAAWL,EAAIG,GAFzB,IASV1P,aAtFO,WAuFL,IAAM3D,EAAIqE,KAAKyG,MAAM6H,kBAErB,OAAItO,KAAKlE,SAAStB,OAASsD,GAAaC,aAC/BiC,KAAKjE,QAGTiE,KAAKlE,SAASoC,cAIf8B,KAAKlE,SAASsH,aAAcpD,KAAKlE,SAASuH,UAI1CrD,KAAKlE,SAASgT,yBAA2B9O,KAAKlE,SAAS+C,UAAYmB,KAAKlE,SAAS6H,uBAMhFhI,GAAwB,OAAnBqE,KAAK3B,aAIR1C,EAAE8L,UAAY9L,EAAE4L,cAGzB9H,SAlHO,WAmHL,IAAM9D,EAAIqE,KAAKyG,MAAM6H,kBAIrB,OAAQtO,KAAKlE,SAASoC,YAAcvC,IAAMA,EAAE8L,WAM9C7H,YA7HO,WA8HL,IAAMjE,EAAIqE,KAAKyG,MAAM6H,kBAErB,SAAK3S,GAAwB,OAAnBqE,KAAK3B,YAIR1C,EAAEiE,gBAIb+H,SAAU,CACR9J,YAAa,CACXsR,OAAO,EACPzW,IAFW,WAGT,IAAM0W,EAAU,CACd,cAAepP,KAAKjE,OACpB,iBAAkBiE,KAAKjE,OACvB,iBAAkBiE,KAAK7D,QACvB,gBAAiB6D,KAAK7D,QACtB,YAAa6D,KAAKyG,MAAM6H,mBAAqBtO,KAAKyG,MAAM6H,kBAAkBpI,QAC1E,cAAelG,KAAKyG,MAAM6H,mBAAqBtO,KAAKyG,MAAM6H,kBAAkB7G,UAK9E,OAFA2H,EAAQ,SAAWpP,KAAKlE,SAAStB,KAAK6U,cAAcC,UAAU,EAAGtP,KAAKlE,SAAStB,KAAK/D,OAAS,KAAM,EAE5F2Y,IAIX7Q,eAnBQ,WAoBN,QAAIyB,KAAKlE,SAAS0C,WAIdwB,KAAKlE,SAAStB,OAASsD,GAAaW,UAAYuB,KAAKlE,SAAStB,OAASsD,GAAac,iBAC/EoB,KAAKlE,SAASyH,cAMzB1D,aA/BQ,WAgCN,IAAMlE,EAAIqE,KAAKyG,MAAM6H,kBAErB,OAAI3S,GAAKA,EAAEkE,aACFlE,EAAEkE,aAGJG,KAAK7F,SAASkG,iBkClW7B,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,MAErD,UCDTkP,GAAY,GAELC,GAAoB,CAC/BnJ,QAAS,CACPoJ,YADO,SACK3M,GACV,OAAOyM,GAAUzM,IAGnB4M,YALO,WAMLH,GAAUvP,KAAK8C,IAAM9C,QpC6HV,IACb3H,KAAM,WAENiQ,WAAY,CACVqH,qBAGFlK,MAAO,CACLvL,UAAW,CACTM,KAAMwJ,MACN4L,UAAW,SAAA9W,GAAI,OAAKA,EAAM2S,OAAM,SAAA9P,GAAA,OAAKA,aAAakH,QAEpD1I,SAAU,CACRK,KAAMsF,GACNmO,QAAS,kBAAM,IAAInO,KAErBlD,YAAa,CACXpC,KAAMkL,QACNuI,SAAS,GAEX7T,WAAY,CACVI,KAAMkL,QACNuI,SAAS,GAEXjR,WAAY,CACVxC,KAAMkL,QACNuI,SAAS,GAEXxQ,MAAO,CACLjD,KAAMkL,QACNuI,SAAS,GAEX4B,eAAgB,CAACjK,OAAQ9D,QACzBgO,cAAe,CAAClK,OAAQ9D,QACxBxF,UAAW,CACT9B,KAAMkL,QACNuI,SAAS,IAIbpI,OAAQ,CACNL,GACAgK,IAGFvZ,KA7Ca,WA8CX,MAAO,CACL8Z,aAAc,GACdC,WAAW,EACXzV,WAAW,EACXyB,oBAAqB,EACrBN,aAAc,GACduU,uBAAwB,GACxB9T,SAAS,EACT+T,SAAS,EACTC,cAAe,KACfxS,KAAM,EACNvB,UAAU,IAIdgK,QA7Da,WA8DXd,SAASwD,iBAAiB,UAAW9I,KAAKgF,mBAC1CM,SAASwD,iBAAiB,QAAS9I,KAAKiF,iBAAiB,GACzDtL,OAAOmP,iBAAiB,eAAgB9I,KAAKoQ,gBAE7CpQ,KAAKqQ,eACLrQ,KAAKsQ,cAGPtH,cAtEa,WAuEX1D,SAAS2D,oBAAoB,UAAWjJ,KAAKgF,mBAC7CM,SAAS2D,oBAAoB,QAASjJ,KAAKiF,iBAAiB,GAC5DtL,OAAOsP,oBAAoB,eAAgBjJ,KAAKoQ,gBAEhDpQ,KAAKuQ,aAGP1D,aA9Ea,WA+EX7M,KAAK+P,aAAe,IAGtBpI,SAAU,CACR6I,mBADQ,WAEN,OAAOxQ,KAAKiQ,uBAAuBxZ,QAGrCga,eALQ,WAMN,OAAOzQ,KAAKiQ,uBAAuBjQ,KAAKhE,sBAG1C0U,iBATQ,WAUN,IAAM5U,EAAWkE,KAAK2Q,eAAe3Q,KAAKhE,qBAE1C,OAAIgE,KAAKzD,aACA,UAGLT,GAAYA,EAASgH,GAChBhH,EAASgH,GAGX,MAGT8N,sBAvBQ,WAwBN,IAAIC,EAAM,EAQV,OANA7Q,KAAKiQ,uBAAuB3L,SAAQ,SAAAxI,GAC9BA,EAASiH,YACT8N,KAICA,GAGThU,iBAnCQ,WAoCN,OAAKmD,KAAKwQ,mBAIHrP,KAAKC,MAAOpB,KAAK4Q,sBAAwB5Q,KAAKwQ,mBAAsB,KAHlE,GAMXjU,aA3CQ,WA4CN,OAAOyD,KAAKwQ,mBAAqB,GAAKxQ,KAAKhE,sBAAwBgE,KAAKiQ,uBAAuBxZ,QAGjGqa,mBA/CQ,WAgDN,OAAI9Q,KAAK0Q,mBAAqB1Q,KAAK6P,iBAI9B7P,KAAKkQ,UAAYlQ,KAAK6P,gBAA+C,IAA7B7P,KAAKhE,qBAOpD+U,kBA3DQ,WA4DN,QAAI/Q,KAAKzF,WAILyF,KAAK0Q,mBAAqB1Q,KAAK8P,eAOrCa,eAAgB,CACdxB,OAAO,EAEPzW,IAHc,WAGR,WACJ,GAAIsH,KAAK9F,WAAa8F,KAAK9F,UAAUzD,OACnC,OAAOuJ,KAAK9F,UAGd,IAAMA,EAAY,GAElB,IAAK8F,KAAK9F,UAAW,CACnB,IAAM8W,EAAW,CACfjR,QAASyC,GACTvD,gBAAiB2D,IAGbqO,EAAcjR,KAAKkR,OAAOjD,UAC5BkD,EAAW,KAEXF,GAAeA,EAAYxa,SAC7B0a,EAAWF,EAAY,GAAGE,SACrBA,IACHA,EAAWF,IAIXE,GACFA,EACGxG,QAAO,SAAAhP,GAAA,OAAKA,EAAEnB,OAA6C,IAArCmB,EAAEnB,KAAKnC,KAAKoM,QAAQ,eAC1CH,SAAQ,SAAA3I,GACP,IAAM8J,EAAQ9J,EAAE8J,MACV2L,EAAoB,EAAK3B,YAAYhK,EAAM3C,IAC7CuO,EAAQ,IAAIxO,GAEmB,OAA/BuO,EAAkBtV,WACpBuV,EAAQD,EAAkBtV,UAGxB2J,EAAME,aACR0L,EAAMpV,OAASwJ,EAAME,YAGvBjP,OAAO4a,KAAKD,GAAO/M,SAAQ,SAAAlL,GACzB,QAAmBmY,IAAf9L,EAAMrM,GACR,GAA0B,mBAAfiY,EAAMjY,GACfiY,EAAMjY,IAAsB,IAAfqM,EAAMrM,QACd,GAAIA,KAAO4X,EAAU,CAC1B,IACEQ,EAAiBR,EAAS5X,GAC1B2G,EAAU,GAEZ0F,EAAMrM,GAAKkL,SAAQ,SAAAY,GACjB,IAAMuM,EAAW,IAAID,EAErB9a,OAAO4a,KAAKG,GAAUnN,SAAQ,SAAAoN,QACAH,IAAxBrM,EAAOwM,KACTD,EAASC,GAAexM,EAAOwM,OAInC3R,EAAQhJ,KAAK0a,MAGfJ,EAAMjY,GAAO2G,OAEb,OAAO3G,GACL,IAAK,OACH,IAAyD,IAArD1C,OAAOsW,OAAOlP,IAAc2G,QAAQgB,EAAMrM,IAC5CiY,EAAMjY,GAAOqM,EAAMrM,QAEnB,IAAK,IAAMuY,KAAmB7T,GAC5B,GAAI6T,EAAgBtC,gBAAkB5J,EAAMrM,GAAKiW,cAAe,CAC9DgC,EAAMjY,GAAO0E,GAAa6T,GAC1B,MAIN,MAEF,QACEN,EAAMjY,GAAOqM,EAAMrM,GACnB,UAMVgY,EAAkBtV,SAAWuV,EAE7BA,EAAMnN,eAENhK,EAAUnD,KAAKsa,MAKvB,OAAOnX,KAKbmM,QAAS,CACPxK,eADO,SACQ2K,GACbxG,KAAK+P,aAAahZ,KAAKyP,IAMzBoL,wBARO,WASL,OAAO5R,KAAK+P,aAAa/P,KAAKhE,sBAGhCqU,aAZO,WAaLrQ,KAAK6R,4BACL7R,KAAK8R,mBAOPD,0BArBO,WAqBqB,WACpB3X,EAAY,GAElB,GAAK8F,KAAK2Q,eAAela,OAAzB,CAIA,IAGE0N,EAFAvI,EAAQ,EACRmW,EAAc,EAEdC,EAAchS,KAAKhE,oBAXK,aAcxB,IAAIF,EAAW,EAAK6U,eAAe/U,GAEnC,GAAI1B,EAAUuO,MAAK,SAAA9M,GAAA,OAAKA,IAAMG,KAC5B,cAQF,GALAA,EAASmW,SAASF,GAClBjW,EAAS3B,SAAW,EAAKA,SAEzBD,EAAUnD,KAAK+E,GAEVA,EAASoH,KAEP,GAAIpH,EAASiH,SAGlB,GAFAoB,EAASrI,EAASoW,YAEd/N,EACF,GAAe,YAAXA,EACFvI,EAAQ,EAAK+U,eAAela,YAE5B,IADK,eACIF,GACP,GAAI,EAAKoa,eAAepa,GAAGuM,KAAOqB,EAQhC,OAPI5N,EAAIqF,GAAS1B,EAAUuO,MAAK,SAAA9M,GAAA,OAAKA,IAAM,EAAKgV,eAAepa,OAC7DuF,EAASiH,UAAW,EACpBiP,EAAczb,IACZqF,GAEFA,EAAQrF,EAEV,SATKA,EAAI,EAAGA,EAAI,EAAKoa,eAAela,OAAQF,IAAK,SAA5CA,GAA4C,eASjD,YAKJqF,OAGJA,EAAQ,EAAK+U,eAAela,aAzB1BmF,IA4BFmW,GAzCJ,EAAG,0BAIC,YAsCKnW,EAAQoE,KAAK2Q,eAAela,QAErCuJ,KAAKiQ,uBAAyB/V,EAC9B8F,KAAKmS,aAAaH,KAOpBF,gBAtFO,WAyFL,IAFA,IAAM5X,EAAY,GAET0B,EAAQ,EAAGA,EAAQoE,KAAKiQ,uBAAuBxZ,OAAQmF,IAAS,CACvE,IAAME,EAAWkE,KAAKiQ,uBAAuBrU,GAI7C,GAFA1B,EAAUnD,KAAK+E,IAEVA,EAASiH,SAAU,CAClB/C,KAAKgQ,YAGPhQ,KAAKgQ,WAAY,GAEnB,OAIJhQ,KAAKtE,aAAexB,GAOtBkW,eA/GO,SA+GQgC,GACTpS,KAAKhE,oBAAsB,IAAMgE,KAAKzF,YACxC6X,EAAMhL,iBACNgL,EAAMC,YAAc,KAOxBrN,kBAzHO,SAyHWsN,GAChB,GAAc,QAAVA,EAAElZ,MAAiB4G,KAAKzF,UAI5B,GAAI+X,EAAEpS,SACJoS,EAAErK,kBACFqK,EAAElL,iBAEEpH,KAAKhD,YACPgD,KAAK/C,2BAEF,CACL,IAAMtB,EAAIqE,KAAK4R,0BAEXjW,EAAE4S,eACJ+D,EAAElL,iBAEFzL,EAAEwS,eAEFmE,EAAErK,kBAEFjI,KAAKuS,UACLvS,KAAK7D,SAAU,KAKrB8I,gBArJO,SAqJSqN,GACd,IAAIA,EAAEpS,WAAiD,IAArC,CAAC,MAAO,SAASuE,QAAQ6N,EAAElZ,OAAe4G,KAAKzF,UAAjE,CAIA,IAAMoB,EAAIqE,KAAK4R,0BAED,QAAVU,EAAElZ,KAAiBuC,EAAE4S,cACvB5S,EAAEwS,cAEY,UAAVmE,EAAElZ,KACJ4G,KAAKwS,YAGPF,EAAErK,kBACFjI,KAAK7D,SAAU,KAInBqW,UAxKO,WAyKL,IAAIxS,KAAK5D,SAAT,CAIA,IAAMT,EAAIqE,KAAK4R,0BAEXjW,EAEFA,EAAE2C,UACO0B,KAAKgQ,WAAahQ,KAAKzD,cAEhCyD,KAAKvD,WAIT8V,QAxLO,WAyLL,IAAM5W,EAAIqE,KAAK4R,0BAEXjW,EAEFA,EAAEgT,QAEF3O,KAAKwS,aAIT/V,OAnMO,WAoMLuD,KAAKyS,aACLzS,KAAKzF,WAAY,GAGnBmY,aAxMO,WAyML1S,KAAKwH,MAAM,WAAYxH,KAAKgQ,UAAWhQ,KAAKtE,eAG9C+W,WA5MO,WA6MLzS,KAAKwH,MAAM,SAAUxH,KAAKtE,eAO5B2B,wBApNO,WAqNL,GAAI2C,KAAKzF,UACP,OAAO,EAGT,IAAMoB,EAAIqE,KAAKyQ,eACf,SAAI9U,GAAMA,EAAEuC,eAIR8B,KAAKgQ,WAAchQ,KAAKzD,eAIrByD,KAAKhE,oBAAsBgE,KAAKtE,aAAajF,OAAS,IAM/DyF,mBAxOO,SAwOYJ,GAAU,WACvBA,EAASyL,WACXvH,KAAKwH,MAAM,SAAU1L,EAASA,UAE1BkE,KAAKhE,oBAAsBgE,KAAKiQ,uBAAuBxZ,UACvDuJ,KAAKhE,oBAGTgE,KAAKwK,WAAU,WACb,EAAKrO,SAAU,EAEf,EAAKkU,eACL,EAAKC,aAGL,EAAK9F,WAAU,WACb,IAAM7O,EAAI,EAAKiW,0BAEXjW,GACF,EAAKW,WAAaX,EAAEwS,aACpB,EAAKnS,oBAAsBL,EAAEG,SAASF,OAC7B,EAAKW,eAEd,EAAKyT,WAAY,EACjB,EAAKhU,oBAAsB,EAAKiU,uBAAuBxZ,OAEvD,EAAKgQ,MAAMkM,QAAU,EAAKlM,MAAMkM,OAAO5L,SAGzC,EAAKS,MAAM,OAAQ,EAAKkJ,iBAAkB,EAAKD,uBAG1CzQ,KAAKgQ,YACdhQ,KAAKgQ,WAAY,IAOrB/S,qBAhRO,WAiRL+C,KAAK4S,YAED5S,KAAKhE,oBAAsB,IAAMgE,KAAKzF,YACpCyF,KAAK+Q,mBACP/Q,KAAK6S,eAGL7S,KAAKhE,oBAEPgE,KAAK7D,SAAU,EAEf6D,KAAKsQ,eAOThT,iBAnSO,WAoSL0C,KAAK4S,YAED5S,KAAK3C,2BACP2C,KAAKwS,YAGPxS,KAAK7D,SAAU,GAMjBgW,aAhTO,SAgTMvW,GACX,GAAIwI,OAAOxI,GAAQ,CACjB,IAAIkX,EAAgB9S,KAAKhE,oBAEzBgE,KAAKiQ,uBAAuB3L,SAAQ,SAACxI,EAAUiX,GACzCjX,EAASgH,KAAOlH,IAClBkX,EAAgBC,MAIpBnX,EAAQkX,EAGV,GAAIlX,IAAUoE,KAAKhE,sBACjBgE,KAAK4S,aAEA5S,KAAKzF,WAAaqB,GAASoE,KAAKiQ,uBAAuBxZ,OAAS,GAAG,CAEtE,EAAG,CACD,IAAMuc,EACJhT,KACGiQ,uBACApW,MAAM,EAAG+B,GACT6P,OAAM,SAAA9P,GAAA,OAAKA,EAAEoH,YAElB,GAAIiQ,EACF,QAGApX,QACKA,EAAQ,GAEjBoE,KAAK7D,QAAUP,EAAQoE,KAAKhE,oBAC5BgE,KAAKhE,oBAAsBJ,EAE3BoE,KAAKsQ,eAQXsC,UA3VO,WA4VLtN,SAAS2N,eAAiB3N,SAAS2N,cAAcjM,MAAQ1B,SAAS2N,cAAcjM,QAGlFsJ,WA/VO,WAgWDtQ,KAAKvC,QACHuC,KAAK8Q,mBACP9Q,KAAK6S,aACI7S,KAAK+Q,mBACd/Q,KAAKuQ,cAKXsC,WAzWO,WA0WD7S,KAAKvC,QAAUuC,KAAKkQ,UACtBlQ,KAAKmQ,cAAgB+C,YAAYlT,KAAKmT,cAAe,KACrDnT,KAAKkQ,SAAU,IAInBK,UAhXO,WAiXDvQ,KAAKkQ,SACPkD,cAAcpT,KAAKmQ,eAGrBnQ,KAAKkQ,SAAU,GAGjBiD,cAxXO,aAyXHnT,KAAKrC,KAEPqC,KAAKwH,MAAM,QAASxH,KAAKrC,KAAMqC,KAAKtC,WAAWsC,KAAKrC,QAGtDD,WA9XO,SA8XI2V,GACT,IACEC,EAAa,GACb7c,EAAS,EAOX,OALI4c,GAAW,OACbC,EAAa,GACb7c,EAAS,GAGJ,IAAIgL,KAAK,IAAO4R,GAASE,cAAcC,OAAOF,EAAY7c,IAGnE4F,YA3YO,SA2YKoX,GACVzT,KAAK5D,SAAWqX,GAGlBC,MA/YO,WAgZL1T,KAAK2Q,eAAerM,SAAQ,SAAAxI,GAAO,OAAKA,EAAS6X,iBACjD3T,KAAKmS,aAAa,KAItBpI,MAAO,CACLiG,UADK,WAEHhQ,KAAK0S,gBAGPnY,UALK,WAMHyF,KAAKuQ,e,UqC9xBb,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,KAErD,UtCoEE,IACblY,KAAM,UAENiQ,WAAY,CACVsL,aAGF3d,KAPa,WAQX,MAAO,CACLsE,WAAW,EACXyV,WAAW,EACX7V,SAAU,IAAI2F,GAEd5F,UAAW,CACT,IAAI2I,GAAc,CAChBC,GAAI,aACJ9E,QAAS,oCACTC,MAAO,2BACPzD,KAAMsD,GAAamE,KACnB/D,UAAU,EACVkC,YAAa,yBAEf,IAAIyC,GAAc,CAChBC,GAAI,QACJ9E,QAAS,sCACTC,MAAO,4BACPzD,KAAMsD,GAAa6D,MACnBzD,UAAU,EACVkC,YAAa,yBAEf,IAAIyC,GAAc,CAChBC,GAAI,wBACJ9E,QAAS,oCACTC,MAAO,wDACPsF,cAAc,EACd/I,KAAMsD,GAAa+D,sBACnBhD,UAAU,EACVX,UAAU,EACV6B,QAAS,CACP,IAAIyC,GAAa,CACfE,SAAU,EAAQ,QAClBC,SAAU,gBACVN,MAAO,aAET,IAAIG,GAAa,CACfE,SAAU,EAAQ,QAClBC,SAAU,eACVN,MAAO,YAET,IAAIG,GAAa,CACfE,SAAU,EAAQ,QAClBC,SAAU,iBACVN,MAAO,cAET,IAAIG,GAAa,CACfE,SAAU,EAAQ,QAClBC,SAAU,cACVN,MAAO,cAIb,IAAIQ,GAAc,CAChBC,GAAI,QACJ7E,MAAO,wDACPzD,KAAMsD,GAAakE,MACnB9D,UAAU,EACViF,KAAM,mBAER,IAAIN,GAAc,CAChBC,GAAI,SACJ7E,MAAO,gCACPzD,KAAMsD,GAAaW,SACnBP,UAAU,EACVkC,YAAa,yBAEf,IAAIyC,GAAc,CAChBC,GAAI,kBACJ9E,QAAS,kEACTC,MAAO,4BACPsF,cAAc,EACd/I,KAAMsD,GAAac,eACnBC,UAAU,EACVuE,YAAY,EACZlF,UAAU,EACV6B,QAAS,CACP,IAAIyC,GAAa,CACfH,MAAO,aAET,IAAIG,GAAa,CACfH,MAAO,aAET,IAAIG,GAAa,CACfH,MAAO,gBAIb,IAAIQ,GAAc,CAChBC,GAAI,mBACJ7E,MAAO,6BACPzD,KAAMsD,GAAac,eACnBC,UAAU,EACVH,SAAU,4BACVR,UAAU,EACV6B,QAAS,CACP,IAAIyC,GAAa,CACfH,MAAO,aAET,IAAIG,GAAa,CACfH,MAAO,aAET,IAAIG,GAAa,CACfH,MAAO,aAET,IAAIG,GAAa,CACfH,MAAO,gBAIb,IAAIQ,GAAc,CAChBC,GAAI,UACJ7E,MAAO,yBACPqF,QAAS,kIACTtE,YAAa,+DACbxE,KAAMsD,GAAaC,eAErB,IAAI8E,GAAc,CAChBC,GAAI,cACJ9E,QAAS,iCACTC,MAAO,oBACPzD,KAAMsD,GAAa4D,SACnB7C,UAAU,EACVuB,YAAa,SACbhC,QAAQ,EACRF,UAAU,EACV6B,QAAS,CACP,IAAIyC,GAAa,CACfH,MAAO,WAET,IAAIG,GAAa,CACfH,MAAO,SACPvJ,MAAO,YAGXoK,KAAM,CACJ2Q,OAAQ,YAGZ,IAAIhR,GAAc,CAChBC,GAAI,SACJ7E,MAAO,uBACPqF,QAAS,sEACT9I,KAAMsD,GAAaC,aACnBmF,KAAM,CACJ4Q,OAAQ,aAGZ,IAAIjR,GAAc,CAChBC,GAAI,SACJ9E,QAAS,SACTC,MAAO,qBACPS,SAAU,kCACVlE,KAAMsD,GAAac,eACnBC,UAAU,EACVX,UAAU,EACV6B,QAAS,CACP,IAAIyC,GAAa,CACfH,MAAO,sBACPvJ,MAAO,WAET,IAAI0J,GAAa,CACfH,MAAO,4BAGXa,KAAM,CACJ6Q,OAAQ,eAOlB3N,QArLa,WAsLXd,SAASwD,iBAAiB,QAAS9I,KAAKgK,gBAG1ChB,cAzLa,WA0LX1D,SAAS2D,oBAAoB,QAASjJ,KAAKgK,gBAG7C3D,QAAS,CACP2D,cADO,SACOlD,GAIO,UAAfA,EAAO1N,KAAmB4G,KAAKgQ,YAAchQ,KAAKzF,WACpDyF,KAAKtF,cAKTV,WAXO,SAWIgW,EAAWtU,GAEpBsE,KAAKgQ,UAAYA,GAInB/V,SAjBO,SAiBEyB,GAGPsE,KAAKtF,cAGPA,WAvBO,WA0BLsF,KAAKyG,MAAMuN,SAASzZ,WAAY,EAEhCyF,KAAKzF,WAAY,EAGJyF,KAAKiU,WAcpBA,QA7CO,WA8CL,IAAMhe,EAAO,CACXiE,UAAW,GACXga,QAAS,IAeX,OAZAlU,KAAK9F,UAAUoK,SAAQ,SAAAxI,GACrB,GAAIA,EAASmC,MAAO,CAClB,IAAIhC,EAASH,EAASG,OAClB+H,MAAMC,QAAQhI,KAChBA,EAASA,EAAOmQ,KAAK,OAGvBnW,EAAKiE,UAAUnD,KAAK+E,EAASmC,OAC7BhI,EAAKie,QAAQnd,KAAKkF,OAIfhG,K,UuClUf,MAAM,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAASke,KAErD,UCAfC,eAAUC,IAASC,MAAM,S,8CCTzBtc,EAAOD,QAAU,IAA0B,6B,8CCA3CC,EAAOD,QAAU,IAA0B,8B,kCCA3C,W,qBCAAC,EAAOD,QAAU,IAA0B,4B,kCCA3C,W,qBCAAC,EAAOD,QAAU,IAA0B","file":"js/index.aceb4bb9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Create and setup your form here\r\n \r\n<template>\r\n  <div>\r\n    <header class=\"vff-header\">\r\n      <div class=\"f-container\">\r\n       <!-- Add custom logo here -->\r\n        <svg class=\"f-logo\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMinYMid meet\" viewBox=\"0 0 35.606 11.211\">\r\n          <path d=\"M.134.837H3.21V8.01h4.203v2.18H.134V.837z\"/>\r\n          <path d=\"M11.875.59c1.48 0 2.668.448 3.567 1.344s1.35 2.052 1.35 3.47c0 1.48-.445 2.7-1.336 3.632S13.38 10.45 11.9 10.45c-1.678 0-2.954-.54-3.827-1.622-.717-.9-1.08-2.022-1.09-3.397-.01-1.36.39-2.484 1.193-3.374C9.06 1.08 10.292.59 11.875.59zm0 2.283c-.563 0-1.003.222-1.323.662-.338.467-.507 1.124-.507 1.972 0 .865.162 1.524.487 1.978a1.58 1.58 0 0 0 1.369.682c.588 0 1.04-.223 1.355-.668s.474-1.07.474-1.875c0-1.834-.62-2.75-1.855-2.75z\"/>\r\n          <path d=\"M21.565 7.078V5.055h4.217v5.163h-1.986l-.13-.908c-.693.76-1.617 1.142-2.777 1.142-1.383 0-2.488-.437-3.313-1.3s-1.243-2.03-1.252-3.464c-.01-1.462.385-2.65 1.18-3.567.875-1.012 2.11-1.518 3.7-1.518 1.21 0 2.207.303 3 .907s1.264 1.457 1.447 2.556h-2.92c-.207-.787-.73-1.182-1.57-1.182-.553 0-.988.236-1.303.707s-.475 1.153-.475 2.043c0 1.695.652 2.542 1.96 2.542.363 0 .695-.103.998-.306a1.29 1.29 0 0 0 .572-.784h-1.35v.002z\"/>\r\n          <path d=\"M30.556.59c1.48 0 2.668.448 3.568 1.344s1.348 2.052 1.348 3.47c0 1.48-.443 2.7-1.336 3.632S32.06 10.45 30.58 10.45c-1.678 0-2.953-.54-3.826-1.622-.72-.892-1.082-2.022-1.1-3.398-.008-1.357.39-2.48 1.193-3.372C27.74 1.08 28.974.59 30.556.59zm0 2.283c-.563 0-1.002.222-1.322.662-.336.467-.506 1.125-.506 1.972 0 .865.162 1.524.486 1.978s.78.682 1.37.682 1.04-.223 1.355-.668.475-1.07.475-1.875c-.002-1.834-.62-2.75-1.857-2.75z\"/>\r\n        </svg>\r\n      </div>\r\n    </header>\r\n\r\n    <flow-form\r\n      ref=\"flowform\"\r\n      v-on:complete=\"onComplete\"\r\n      v-on:submit=\"onSubmit\"\r\n      v-bind:questions=\"questions\"\r\n      v-bind:language=\"language\"\r\n      v-bind:standalone=\"true\"\r\n    >\r\n    <!-- Custom content for the Complete/Submit screen slots in the FlowForm component -->\r\n      <!-- We've overriden the default \"complete\" slot content -->\r\n     <template v-slot:complete>\r\n        <div class=\"f-section-wrap\">\r\n          <p>\r\n            <span class=\"fh2\">Thank you. 🙏</span>\r\n            <span class=\"f-section-text\">\r\n              Great work, the survey is completed, and our demo is done. You can review your answers or press submit.\r\n            </span>\r\n          </p>\r\n          <p class=\"f-description\">Note: No data will be saved and/or sent in this demo.</p>\r\n        </div>  \r\n      </template>\r\n\r\n      <!-- We've overriden the default \"completeButton\" slot content -->\r\n      <template v-slot:completeButton>\r\n        <div class=\"f-submit\" v-if=\"!submitted\">\r\n          <button \r\n            class=\"o-btn-action\"\r\n            ref=\"button\"\r\n            type=\"submit\"\r\n            href=\"#\"\r\n            v-on:click.prevent=\"onSendData()\"\r\n            aria-label=\"Press to submit\"\r\n          >\r\n            <span>{{ language.submitText }}</span>\r\n          </button>\r\n          <a class=\"f-enter-desc\"\r\n            href=\"#\"\r\n            v-on:click.prevent=\"onSendData()\"\r\n            v-html=\"language.formatString(language.pressEnter)\">\r\n          </a>\r\n        </div>\r\n\r\n        <p class=\"text-success\" v-if=\"submitted\">Submitted succesfully.</p>\r\n      </template>\r\n    </flow-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  /*\r\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\r\n    https://www.ditdot.hr/en\r\n  */\r\n\r\n  // Import necessary components and classes\r\n  import FlowForm from '../../src/components/FlowForm.vue'\r\n  import QuestionModel, { QuestionType, ChoiceOption, LinkOption } from '../../src/models/QuestionModel'\r\n  import LanguageModel from '../../src/models/LanguageModel'\r\n  // If using the npm package, use the following line instead of the ones above.\r\n  // import FlowForm, { QuestionModel, QuestionType, ChoiceOption, LanguageModel } from '@ditdot-dev/vue-flow-form'\r\n\r\n  export default {\r\n    name: 'example',\r\n\r\n    components: {\r\n      FlowForm\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        submitted: false,\r\n        completed: false,\r\n        language: new LanguageModel(),\r\n        // Create question list with QuestionModel instances\r\n        questions: [\r\n          new QuestionModel({\r\n            id: 'first_name',\r\n            tagline: 'Hi! Welcome to our demo survey 😊',\r\n            title: 'What is your first name?',\r\n            type: QuestionType.Text,\r\n            required: true,\r\n            placeholder: 'Start typing here...'\r\n          }),\r\n          new QuestionModel({\r\n            id: 'email',\r\n            tagline: \"Nice to meet you 👀, let's continue\",\r\n            title: 'Provide an example email.',\r\n            type: QuestionType.Email,\r\n            required: true,\r\n            placeholder: 'Start typing here...'\r\n          }),\r\n          new QuestionModel({\r\n            id: 'multiple_choice_image',\r\n            tagline: \"Let's take it one step further...\",\r\n            title: 'Tell us what is your favorite social network hangout.',\r\n            helpTextShow: false,\r\n            type: QuestionType.MultiplePictureChoice,\r\n            multiple: false,\r\n            required: true,\r\n            options: [\r\n              new ChoiceOption({\r\n                imageSrc: require('./assets/images/facebook.png'),\r\n                imageAlt: 'Facebook logo',\r\n                label: 'Facebook'\r\n              }),\r\n              new ChoiceOption({\r\n                imageSrc: require('./assets/images/twitter.png'),\r\n                imageAlt: 'Twitter logo',\r\n                label: 'Twitter'\r\n              }),\r\n              new ChoiceOption({\r\n                imageSrc: require('./assets/images/instagram.png'),\r\n                imageAlt: 'Instagram logo',\r\n                label: 'Instagram'\r\n              }),\r\n              new ChoiceOption({\r\n                imageSrc: require('./assets/images/tiktok.png'),\r\n                imageAlt: 'TikTok logo',\r\n                label: 'TikTok'\r\n              }),\r\n            ]\r\n          }),\r\n          new QuestionModel({\r\n            id: 'phone',\r\n            title: 'Doing great! 👍 Go ahead and try with a phone number.',\r\n            type: QuestionType.Phone,\r\n            required: true,\r\n            mask: '(###) ###-####'\r\n          }),\r\n          new QuestionModel({\r\n            id: 'movies',\r\n            title: 'List your favorite movies. 🍿',\r\n            type: QuestionType.LongText,\r\n            required: true,\r\n            placeholder: 'Start typing here...'\r\n          }),\r\n          new QuestionModel({\r\n            id: 'multiple_choice',\r\n            tagline: 'FYI, You can always go back 👈, use the up arrow on the bottom.',\r\n            title: 'Multiple choice question:',\r\n            helpTextShow: false,\r\n            type: QuestionType.MultipleChoice,\r\n            multiple: false,\r\n            allowOther: true,\r\n            required: true,\r\n            options: [\r\n              new ChoiceOption({\r\n                label: 'Answer 1'\r\n              }),\r\n              new ChoiceOption({\r\n                label: 'Answer 2'\r\n               }),\r\n              new ChoiceOption({\r\n                label: 'Answer 3'\r\n              })\r\n            ]\r\n          }),\r\n          new QuestionModel({\r\n            id: 'multiple_choices',\r\n            title: 'Multiple choices question:',\r\n            type: QuestionType.MultipleChoice,\r\n            multiple: true,\r\n            helpText: 'Select all that apply. 👇',\r\n            required: true,\r\n            options: [\r\n              new ChoiceOption({\r\n                label: 'Answer 1'\r\n              }),\r\n              new ChoiceOption({\r\n                label: 'Answer 2'\r\n              }),\r\n              new ChoiceOption({\r\n                label: 'Answer 3'\r\n              }),\r\n              new ChoiceOption({\r\n                label: 'Answer 4'\r\n              })\r\n            ]\r\n          }),\r\n          new QuestionModel({\r\n            id: 'break_1',\r\n            title: 'Awesome, thank you. 🙏',\r\n            content: 'You arrived at the section break of our little demo survey. To continue exploring, just press enter or use the continue button.',\r\n            description: 'Note: We will take a look at our multiple path feature next.',\r\n            type: QuestionType.SectionBreak\r\n          }),\r\n          new QuestionModel({\r\n            id: 'choose_path',\r\n            tagline: 'Where would you like to go? 🤔',\r\n            title: 'Choose your path:',\r\n            type: QuestionType.Dropdown,\r\n            multiple: false,\r\n            placeholder: 'Select',\r\n            inline: true,\r\n            required: true,\r\n            options: [\r\n              new ChoiceOption({\r\n                label: 'Path A'\r\n              }),\r\n              new ChoiceOption({\r\n                label: 'Path B',\r\n                value: 'path_b'\r\n              })\r\n            ],\r\n            jump: {\r\n              path_b: 'path_b'\r\n            }\r\n          }),\r\n          new QuestionModel({\r\n            id: 'path_a',\r\n            title: 'Excellent choice! 🥳',\r\n            content: 'Press enter or use the continue button for the final submit screen.',\r\n            type: QuestionType.SectionBreak,\r\n            jump: {\r\n              _other: '_submit'\r\n            }\r\n          }),\r\n          new QuestionModel({\r\n            id: 'path_b',\r\n            tagline: 'Path B',\r\n            title: 'Hmm, are you sure?',\r\n            helpText: 'Path A sounds like a winner! 😉',\r\n            type: QuestionType.MultipleChoice,\r\n            multiple: false,\r\n            required: true,\r\n            options: [\r\n              new ChoiceOption({\r\n                label: 'Ok, let\\'s go with A',\r\n                value: 'path_a'\r\n              }),\r\n              new ChoiceOption({\r\n                label: 'Yes, finish the survey'\r\n              })\r\n            ],\r\n            jump: {\r\n              path_a: 'path_a'\r\n            }\r\n          })\r\n        ]\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      document.addEventListener('keyup', this.onKeyListener)\r\n    },\r\n\r\n    beforeUnmount() {\r\n      document.removeEventListener('keyup', this.onKeyListener)\r\n    },\r\n\r\n    methods: {\r\n      onKeyListener($event) {\r\n        // We've overriden the default \"complete\" slot so\r\n        // we need to implement the \"keyup\" listener manually.\r\n\r\n        if ($event.key === 'Enter' && this.completed && !this.submitted) {\r\n          this.onSendData()\r\n        }\r\n      },\r\n\r\n      /* eslint-disable-next-line no-unused-vars */\r\n      onComplete(completed, questionList) {\r\n        // This method is called whenever the \"completed\" status is changed.\r\n        this.completed = completed\r\n      },\r\n\r\n      /* eslint-disable-next-line no-unused-vars */\r\n      onSubmit(questionList) {\r\n        // This method will only be called if you don't override the\r\n        // completeButton slot.\r\n        this.onSendData()\r\n      },\r\n      \r\n      onSendData() {\r\n        // Set `submitted` to true so the form knows not to allow back/forward\r\n        // navigation anymore.\r\n        this.$refs.flowform.submitted = true\r\n\r\n        this.submitted = true\r\n\r\n        /* eslint-disable-next-line no-unused-vars */\r\n        const data = this.getData()\r\n        /*\r\n          You can use Fetch API to send the data to your server, eg.:\r\n\r\n          fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n          })\r\n        */\r\n      },\r\n\r\n      getData() {\r\n        const data = {\r\n          questions: [],\r\n          answers: []\r\n        }\r\n\r\n        this.questions.forEach(question => {\r\n          if (question.title) {\r\n            let answer = question.answer\r\n            if (Array.isArray(answer)) {\r\n              answer = answer.join(', ')\r\n            }\r\n\r\n            data.questions.push(question.title)\r\n            data.answers.push(answer)\r\n          }\r\n        })\r\n\r\n        return data\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"css\">\r\n  @import '../../src/assets/css/themes/theme-minimal.css';\r\n  /* If using the npm package, use the following lines instead of the one above */\r\n  /* @import '~@ditdot-dev/vue-flow-form/dist/vue-flow-form.css'; */\r\n  /* @import '~@ditdot-dev/vue-flow-form/dist/vue-flow-form.theme-minimal.css'; */\r\n</style>","// Form template and logic\r\n\r\n<template>\r\n  <div class=\"vff\" :class=\"{'vff-not-standalone': !standalone, 'vff-is-mobile': isMobile, 'vff-is-ios': isIos}\">\r\n    <div class=\"f-container\">\r\n      <div class=\"f-form-wrap\">\r\n        <flow-form-question\r\n          :ref=\"setQuestionRef\"\r\n          v-for=\"(q, index) in questionList\"\r\n          v-bind:question=\"q\"\r\n          v-bind:language=\"language\"\r\n          v-bind:key=\"'q' + index\"\r\n          v-bind:active=\"q.index === activeQuestionIndex\"\r\n          v-model=\"q.answer\"\r\n          v-on:answer=\"onQuestionAnswered\"\r\n          v-bind:reverse=\"reverse\"\r\n          v-bind:disabled=\"disabled\"\r\n          v-on:disable=\"setDisabled\"\r\n          v-bind:autofocus=\"autofocus\"\r\n        />\r\n\r\n        <slot></slot>\r\n\r\n        <!-- Complete/Submit screen slots -->   \r\n        <div v-if=\"isOnLastStep\" class=\"vff-animate f-fade-in-up field-submittype\">\r\n          <slot name=\"complete\">\r\n            <!-- Default content for the \"complete\" slot -->\r\n            <div class=\"f-section-wrap\">\r\n              <p>\r\n                <span class=\"fh2\">{{ language.thankYouText }}</span>\r\n              </p>\r\n            </div>\r\n          </slot>\r\n\r\n          <slot name=\"completeButton\">\r\n            <!-- Default content for the \"completeButton\" slot -->\r\n            <button \r\n              class=\"o-btn-action\"\r\n              ref=\"button\" \r\n              type=\"button\" \r\n              href=\"#\" \r\n              v-on:click.prevent=\"submit()\" \r\n              v-if=\"!submitted\"\r\n              v-bind:aria-label=\"language.ariaSubmitText\">\r\n                <span>{{ language.submitText }}</span>\r\n            </button>\r\n            <a \r\n              class=\"f-enter-desc\"\r\n              href=\"#\"\r\n              v-on:click.prevent=\"submit()\"\r\n              v-if=\"!submitted\"\r\n              v-html=\"language.formatString(language.pressEnter)\">\r\n            </a>\r\n            <p class=\"text-success\" v-if=\"submitted\">{{ language.successText }}</p>\r\n          </slot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"vff-footer\">\r\n      <div class=\"footer-inner-wrap\">\r\n        <div v-if=\"progressbar\" class=\"f-progress\" v-bind:class=\"{'not-started': percentCompleted === 0, 'completed': percentCompleted === 100}\">\r\n          <div class=\"f-progress-bar\">\r\n            <div class=\"f-progress-bar-inner\" v-bind:style=\"'width: ' + percentCompleted + '%;'\"></div>\r\n          </div>\r\n          {{ language.percentCompleted.replace(':percent', percentCompleted) }}\r\n        </div>\r\n        <div v-if=\"navigation\" class=\"f-nav\">\r\n          <a\r\n            class=\"f-prev\"\r\n            href=\"#\"\r\n            v-bind:class=\"{'f-disabled': activeQuestionIndex === 0 || submitted}\"\r\n            v-on:click.prevent=\"goToPreviousQuestion()\"\r\n            role=\"button\"\r\n            v-bind:aria-label=\"language.ariaPrev\"\r\n          >\r\n            <svg\r\n              version=\"1.1\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n              x=\"0px\"\r\n              y=\"0px\"\r\n              width=\"42.333px\"\r\n              height=\"28.334px\"\r\n              viewBox=\"78.833 5.5 42.333 28.334\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <path\r\n                d=\"M82.039,31.971L100,11.442l17.959,20.529L120,30.187L101.02,8.492c-0.258-0.295-0.629-0.463-1.02-0.463c-0.39,0-0.764,0.168-1.02,0.463L80,30.187L82.039,31.971z\"\r\n              />\r\n            </svg>\r\n            <span class=\"f-nav-text\" aria-hidden=\"true\">{{ language.prev }}</span>\r\n          </a>\r\n          <a\r\n            class=\"f-next\"\r\n            href=\"#\"\r\n            v-bind:class=\"{'f-disabled': !isNextQuestionAvailable()}\"\r\n            v-on:click.prevent=\"goToNextQuestion()\"\r\n            role=\"button\"\r\n            v-bind:aria-label=\"language.ariaNext\"\r\n          >\r\n            <svg\r\n              version=\"1.1\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n              x=\"0px\"\r\n              y=\"0px\"\r\n              width=\"42.333px\"\r\n              height=\"28.334px\"\r\n              viewBox=\"78.833 5.5 42.333 28.334\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <path\r\n                d=\"M117.963,8.031l-17.961,20.529L82.042,8.031l-2.041,1.784l18.98,21.695c0.258,0.295,0.629,0.463,1.02,0.463c0.39,0,0.764-0.168,1.02-0.463l18.98-21.695L117.963,8.031z\"\r\n              />\r\n            </svg>\r\n            <span class=\"f-nav-text\" aria-hidden=\"true\">{{ language.next }}</span>\r\n          </a>\r\n        </div>\r\n        <div v-if=\"timer\" class=\"f-timer\">\r\n          <span>{{ formatTime(time) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  /*!\r\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\r\n    https://github.com/ditdot-dev/vue-flow-form\r\n    https://www.ditdot.hr/en\r\n  */\r\n\r\n  import FlowFormQuestion from './FlowFormQuestion.vue'\r\n  import QuestionModel, { ChoiceOption, LinkOption, QuestionType } from '../models/QuestionModel'\r\n  import LanguageModel from '../models/LanguageModel'\r\n  import { IsMobile } from '../mixins/IsMobile'\r\n  import { ComponentInstance } from '../mixins/ComponentInstance'\r\n\r\n  export default {\r\n    name: 'FlowForm',\r\n\r\n    components: {\r\n      FlowFormQuestion\r\n    },\r\n    \r\n    props: {\r\n      questions: {\r\n        type: Array,\r\n        validator: value => value.every(q => q instanceof QuestionModel)\r\n      }, \r\n      language: {\r\n        type: LanguageModel,\r\n        default: () => new LanguageModel()\r\n      },\r\n      progressbar: {\r\n        type: Boolean, \r\n        default: true\r\n      },\r\n      standalone: {\r\n        type: Boolean, \r\n        default: true\r\n      },\r\n      navigation: {\r\n        type: Boolean, \r\n        default: true\r\n      },\r\n      timer: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      timerStartStep: [String, Number],\r\n      timerStopStep: [String, Number],\r\n      autofocus: {\r\n        type: Boolean,\r\n        default: true\r\n      }\r\n    },\r\n\r\n    mixins: [\r\n      IsMobile,\r\n      ComponentInstance\r\n    ],\r\n\r\n    data() {\r\n      return {\r\n        questionRefs: [],\r\n        completed: false,\r\n        submitted: false,\r\n        activeQuestionIndex: 0,\r\n        questionList: [],\r\n        questionListActivePath: [],\r\n        reverse: false,\r\n        timerOn: false,\r\n        timerInterval: null,\r\n        time: 0,\r\n        disabled: false\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      document.addEventListener('keydown', this.onKeyDownListener)\r\n      document.addEventListener('keyup', this.onKeyUpListener, true)\r\n      window.addEventListener('beforeunload', this.onBeforeUnload)\r\n\r\n      this.setQuestions()\r\n      this.checkTimer()\r\n    },\r\n\r\n    beforeUnmount() {\r\n      document.removeEventListener('keydown', this.onKeyDownListener)\r\n      document.removeEventListener('keyup', this.onKeyUpListener, true)\r\n      window.removeEventListener('beforeunload', this.onBeforeUnload)\r\n      \r\n      this.stopTimer()\r\n    },\r\n\r\n    beforeUpdate() {\r\n      this.questionRefs = []\r\n    },\r\n    \r\n    computed: {\r\n      numActiveQuestions() {\r\n        return this.questionListActivePath.length\r\n      },\r\n\r\n      activeQuestion() {\r\n        return this.questionListActivePath[this.activeQuestionIndex]\r\n      },\r\n\r\n      activeQuestionId() {\r\n        const question = this.questionModels[this.activeQuestionIndex]\r\n\r\n        if (this.isOnLastStep) {\r\n          return '_submit'\r\n        }\r\n\r\n        if (question && question.id) {\r\n          return question.id\r\n        }\r\n\r\n        return null\r\n      },\r\n\r\n      numCompletedQuestions() {\r\n        let num = 0\r\n\r\n        this.questionListActivePath.forEach(question => {\r\n          if (question.answered) {\r\n            ++num\r\n          }\r\n        })\r\n\r\n        return num\r\n      },\r\n\r\n      percentCompleted() {\r\n        if (!this.numActiveQuestions) {\r\n          return 0\r\n        }\r\n\r\n        return Math.floor((this.numCompletedQuestions / this.numActiveQuestions) * 100)\r\n      },\r\n\r\n      isOnLastStep() {\r\n        return this.numActiveQuestions > 0 && this.activeQuestionIndex === this.questionListActivePath.length\r\n      }, \r\n\r\n      isOnTimerStartStep() {\r\n        if (this.activeQuestionId === this.timerStartStep) {\r\n          return true\r\n        }\r\n\r\n        if (!this.timerOn && !this.timerStartStep && this.activeQuestionIndex === 0) {\r\n          return true\r\n        }\r\n\r\n        return false\r\n      },\r\n\r\n      isOnTimerStopStep() {\r\n        if (this.submitted) {\r\n          return true\r\n        }\r\n        \r\n        if (this.activeQuestionId === this.timerStopStep) {\r\n          return true \r\n        }\r\n\r\n        return false\r\n      },\r\n\r\n      questionModels: {\r\n        cache: false,\r\n\r\n        get() {\r\n          if (this.questions && this.questions.length) {\r\n            return this.questions\r\n          }\r\n\r\n          const questions = []\r\n\r\n          if (!this.questions) {\r\n            const classMap = {\r\n              options: ChoiceOption,\r\n              descriptionLink: LinkOption\r\n            }\r\n\r\n            const defaultSlot = this.$slots.default()\r\n            let children = null\r\n\r\n            if (defaultSlot && defaultSlot.length) {\r\n              children = defaultSlot[0].children\r\n              if (!children) {\r\n                children = defaultSlot\r\n              } \r\n            }\r\n\r\n            if (children) {\r\n              children\r\n                .filter(q => q.type && q.type.name.indexOf('Question') !== -1)\r\n                .forEach(q => {\r\n                  const props = q.props\r\n                  const componentInstance = this.getInstance(props.id)\r\n                  let model = new QuestionModel()\r\n\r\n                  if (componentInstance.question !== null) {\r\n                    model = componentInstance.question\r\n                  } \r\n\r\n                  if (props.modelValue) {\r\n                    model.answer = props.modelValue\r\n                  }\r\n\r\n                  Object.keys(model).forEach(key => {\r\n                    if (props[key] !== undefined) {\r\n                      if (typeof model[key] === 'boolean') {\r\n                        model[key] = props[key] !== false\r\n                      } else if (key in classMap) {\r\n                        const\r\n                          classReference = classMap[key],\r\n                          options = []\r\n\r\n                        props[key].forEach(option => {\r\n                          const instance = new classReference()\r\n\r\n                          Object.keys(instance).forEach(instanceKey => {\r\n                            if (option[instanceKey] !== undefined) {\r\n                              instance[instanceKey] = option[instanceKey]\r\n                            }\r\n                          })\r\n\r\n                          options.push(instance)\r\n                        })\r\n\r\n                        model[key] = options\r\n                      } else {\r\n                        switch(key) {\r\n                          case 'type':\r\n                            if (Object.values(QuestionType).indexOf(props[key]) !== -1) {\r\n                              model[key] = props[key]\r\n                            } else {\r\n                              for (const questionTypeKey in QuestionType) {\r\n                                if (questionTypeKey.toLowerCase() === props[key].toLowerCase()) {\r\n                                  model[key] = QuestionType[questionTypeKey]\r\n                                  break\r\n                                }\r\n                              }\r\n                            }\r\n                            break\r\n\r\n                          default:\r\n                            model[key] = props[key]\r\n                            break\r\n                        }\r\n                      }\r\n                    }\r\n                  })\r\n\r\n                  componentInstance.question = model\r\n\r\n                  model.resetOptions()\r\n\r\n                  questions.push(model)\r\n                })\r\n            }\r\n          }\r\n\r\n          return questions\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      setQuestionRef(el) {\r\n        this.questionRefs.push(el)\r\n      },\r\n\r\n      /**\r\n       * Returns currently active question component (if any).\r\n       */\r\n      activeQuestionComponent() {\r\n        return this.questionRefs[this.activeQuestionIndex]\r\n      },\r\n\r\n      setQuestions() {\r\n        this.setQuestionListActivePath()\r\n        this.setQuestionList()\r\n      },\r\n\r\n      /**\r\n       * This method goes through all questions and sets the ones\r\n       * that are in the current path (taking note of logic jumps)\r\n       */\r\n      setQuestionListActivePath() {\r\n        const questions = []\r\n\r\n        if (!this.questionModels.length) {\r\n          return\r\n        }\r\n\r\n        let\r\n          index = 0,\r\n          serialIndex = 0,\r\n          nextId,\r\n          activeIndex = this.activeQuestionIndex\r\n\r\n        do {\r\n          let question = this.questionModels[index]\r\n\r\n          if (questions.some(q => q === question)) {\r\n            break\r\n          }\r\n          \r\n          question.setIndex(serialIndex)\r\n          question.language = this.language\r\n\r\n          questions.push(question)\r\n\r\n          if (!question.jump) {\r\n            ++index\r\n          } else if (question.answered) {\r\n            nextId = question.getJumpId()\r\n            \r\n            if (nextId) {\r\n              if (nextId === '_submit') {\r\n                index = this.questionModels.length\r\n              } else {\r\n                for (let i = 0; i < this.questionModels.length; i++) {\r\n                  if (this.questionModels[i].id === nextId) {\r\n                    if (i < index && questions.some(q => q === this.questionModels[i])) {\r\n                      question.answered = false\r\n                      activeIndex = i\r\n                      ++index\r\n                    } else {\r\n                      index = i\r\n                    }\r\n                    break\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              ++index\r\n            }\r\n          } else {\r\n            index = this.questionModels.length\r\n          }\r\n\r\n          ++serialIndex\r\n        } while (index < this.questionModels.length)\r\n\r\n        this.questionListActivePath = questions\r\n        this.goToQuestion(activeIndex)\r\n      },\r\n\r\n      /**\r\n       * Sets the question list array\r\n       * (all questions up to, and including, the current one)\r\n       */\r\n      setQuestionList() {\r\n        const questions = []\r\n\r\n        for (let index = 0; index < this.questionListActivePath.length; index++) {\r\n          const question = this.questionListActivePath[index]\r\n\r\n          questions.push(question)\r\n\r\n          if (!question.answered) {\r\n            if (this.completed) {\r\n              // The \"completed\" status changed - user probably changed an\r\n              // already entered answer.\r\n              this.completed = false\r\n            }\r\n            break\r\n          }\r\n        }\r\n\r\n        this.questionList = questions\r\n      },\r\n\r\n      /**\r\n       * If we have any answered questions, notify user before leaving\r\n       * the page.\r\n       */\r\n      onBeforeUnload(event) {\r\n        if (this.activeQuestionIndex > 0 && !this.submitted) {\r\n          event.preventDefault()\r\n          event.returnValue = ''\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Global key listeners, listen for Enter or Tab key events.\r\n       */\r\n      onKeyDownListener(e) {\r\n        if (e.key !== 'Tab' || this.submitted) {\r\n          return\r\n        }\r\n\r\n        if (e.shiftKey) {\r\n          e.stopPropagation()\r\n          e.preventDefault()\r\n\r\n          if (this.navigation) {\r\n            this.goToPreviousQuestion()\r\n          }\r\n        } else {\r\n          const q = this.activeQuestionComponent()\r\n\r\n          if (q.shouldFocus()) {\r\n            e.preventDefault()\r\n\r\n            q.focusField()\r\n          } else {\r\n            e.stopPropagation()\r\n\r\n            this.emitTab()\r\n            this.reverse = false\r\n          }\r\n        }\r\n      }, \r\n\r\n      onKeyUpListener(e) {\r\n        if (e.shiftKey || ['Tab', 'Enter'].indexOf(e.key) === -1 || this.submitted) {\r\n          return\r\n        }\r\n\r\n        const q = this.activeQuestionComponent()\r\n\r\n        if (e.key === 'Tab' && q.shouldFocus()) {\r\n          q.focusField()\r\n        } else {\r\n          if (e.key === 'Enter') {\r\n            this.emitEnter()\r\n          } \r\n\r\n          e.stopPropagation()\r\n          this.reverse = false\r\n        }\r\n      },\r\n\r\n      emitEnter() {\r\n        if (this.disabled) {\r\n          return\r\n        }\r\n\r\n        const q = this.activeQuestionComponent()\r\n\r\n        if (q) {\r\n          // Send enter event to the current question component\r\n          q.onEnter()\r\n        } else if (this.completed && this.isOnLastStep) {\r\n          // We're finished - submit form\r\n          this.submit()\r\n        }\r\n      },\r\n\r\n      emitTab() {\r\n        const q = this.activeQuestionComponent()\r\n\r\n        if (q) {\r\n          // Send tab event to the current question component\r\n          q.onTab()\r\n        } else {\r\n          this.emitEnter()\r\n        }\r\n      },\r\n\r\n      submit() {\r\n        this.emitSubmit()\r\n        this.submitted = true\r\n      },\r\n\r\n      emitComplete() {\r\n        this.$emit('complete', this.completed, this.questionList)\r\n      },\r\n\r\n      emitSubmit() {\r\n        this.$emit('submit', this.questionList)\r\n      },\r\n\r\n      /**\r\n       * Checks if we have another question and if we\r\n       * can jump to it.\r\n       */\r\n      isNextQuestionAvailable() {\r\n        if (this.submitted) {\r\n          return false\r\n        }\r\n\r\n        const q = this.activeQuestion\r\n        if (q && !q.required) {\r\n          return true\r\n        }\r\n\r\n        if (this.completed && !this.isOnLastStep) {\r\n          return true\r\n        }\r\n   \r\n        return this.activeQuestionIndex < this.questionList.length - 1\r\n      },\r\n\r\n      /**\r\n       * Triggered by the \"answer\" event in the Question component\r\n       */\r\n      onQuestionAnswered(question) {\r\n        if (question.isValid()) {\r\n          this.$emit('answer', question.question)\r\n\r\n          if (this.activeQuestionIndex < this.questionListActivePath.length) {\r\n            ++this.activeQuestionIndex\r\n          }\r\n         \r\n          this.$nextTick(() => {\r\n            this.reverse = false\r\n\r\n            this.setQuestions()\r\n            this.checkTimer()\r\n            // Nested $nextTick so we're 100% sure that setQuestions\r\n            // actually updated the question array\r\n            this.$nextTick(() => {\r\n              const q = this.activeQuestionComponent()\r\n\r\n              if (q) {\r\n                this.autofocus && q.focusField()\r\n                this.activeQuestionIndex = q.question.index\r\n              } else if (this.isOnLastStep) {\r\n                // No more questions left - set \"completed\" to true\r\n                this.completed = true\r\n                this.activeQuestionIndex = this.questionListActivePath.length\r\n                \r\n                this.$refs.button && this.$refs.button.focus()\r\n              }\r\n\r\n              this.$emit('step', this.activeQuestionId, this.activeQuestion)\r\n            })\r\n          })\r\n        } else if (this.completed) {\r\n          this.completed = false\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Jumps to previous question.\r\n       */\r\n      goToPreviousQuestion() {\r\n        this.blurFocus()\r\n    \r\n        if (this.activeQuestionIndex > 0 && !this.submitted) {\r\n          if (this.isOnTimerStopStep) {\r\n            this.startTimer()\r\n          }\r\n\r\n          --this.activeQuestionIndex\r\n\r\n          this.reverse = true\r\n\r\n          this.checkTimer()\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Jumps to next question.\r\n       */\r\n      goToNextQuestion() {\r\n        this.blurFocus()\r\n\r\n        if (this.isNextQuestionAvailable()) {\r\n          this.emitEnter()\r\n        }\r\n\r\n        this.reverse = false\r\n      },\r\n\r\n      /**\r\n       * Jumps to question with specific index.\r\n       */\r\n      goToQuestion(index) {\r\n        if (isNaN(+index)) {\r\n          let questionIndex = this.activeQuestionIndex\r\n\r\n          this.questionListActivePath.forEach((question, _index) => {\r\n            if (question.id === index) {\r\n              questionIndex = _index\r\n            }\r\n          })\r\n\r\n          index = questionIndex\r\n        }\r\n\r\n        if (index !== this.activeQuestionIndex) {\r\n          this.blurFocus()\r\n      \r\n          if (!this.submitted && index <= this.questionListActivePath.length - 1) {\r\n            // Check if we can actually jump to the wanted question.\r\n            do {\r\n              const previousQuestionsAnswered = \r\n                this\r\n                  .questionListActivePath\r\n                  .slice(0, index)\r\n                  .every(q => q.answered)\r\n\r\n              if (previousQuestionsAnswered) {\r\n                break\r\n              }\r\n\r\n              --index\r\n            } while (index > 0)\r\n\r\n            this.reverse = index < this.activeQuestionIndex\r\n            this.activeQuestionIndex = index\r\n\r\n            this.checkTimer()\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Removes focus from the currently focused DOM element.\r\n       */\r\n      blurFocus() {\r\n        document.activeElement && document.activeElement.blur && document.activeElement.blur()\r\n      },\r\n\r\n      checkTimer() {\r\n        if (this.timer) {\r\n          if (this.isOnTimerStartStep) {\r\n            this.startTimer()\r\n          } else if (this.isOnTimerStopStep) {\r\n            this.stopTimer()\r\n          }\r\n        }\r\n      },\r\n\r\n      startTimer() {\r\n        if (this.timer && !this.timerOn) {\r\n          this.timerInterval = setInterval(this.incrementTime, 1000)\r\n          this.timerOn = true\r\n        }\r\n      },\r\n\r\n      stopTimer() {\r\n        if (this.timerOn) {\r\n          clearInterval(this.timerInterval)\r\n        }\r\n\r\n        this.timerOn = false\r\n      },\r\n\r\n      incrementTime() {\r\n        ++this.time\r\n        \r\n        this.$emit('timer', this.time, this.formatTime(this.time))\r\n      },\r\n\r\n      formatTime(seconds) {\r\n        let\r\n          startIndex = 14,\r\n          length = 5\r\n            \r\n        if (seconds >= 60 * 60) {\r\n          startIndex = 11\r\n          length = 8\r\n        }\r\n\r\n        return new Date(1000 * seconds).toISOString().substr(startIndex, length)\r\n      },\r\n\r\n      setDisabled(state) {\r\n        this.disabled = state\r\n      },\r\n\r\n      reset() {\r\n        this.questionModels.forEach(question => question.resetAnswer())\r\n        this.goToQuestion(0)\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      completed() {\r\n        this.emitComplete()\r\n      },\r\n      \r\n      submitted() {\r\n        this.stopTimer()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"css\">\r\n  @import '../assets/css/common.css';\r\n</style>\r\n","// Single question template and logic\r\n\r\n<template>\r\n  <div class=\"vff-animate q-form\" v-bind:class=\"mainClasses\" ref=\"qanimate\">\r\n    <div class=\"q-inner\">\r\n      <div v-bind:class=\"{'f-section-wrap': question.type === QuestionType.SectionBreak}\">\r\n        <div v-bind:class=\"{'fh2': question.type !== QuestionType.SectionBreak}\">\r\n          <span class=\"f-tagline\" v-if=\"question.tagline\">{{ question.tagline }}</span>\r\n\r\n          <template v-if=\"question.title\">\r\n            <span class=\"fh2\" v-if=\"question.type === QuestionType.SectionBreak\">{{ question.title }}</span>\r\n            <span class=\"f-text\" v-else>\r\n              {{ question.title }}&nbsp;\r\n              <!-- Required questions are marked by an asterisk (*) -->\r\n              <span class=\"f-required\" v-if=\"question.required\" v-bind:aria-label=\"language.ariaRequired\" role=\"note\"><span aria-hidden=\"true\">*</span></span>\r\n\r\n              <span v-if=\"question.inline\" class=\"f-answer\">\r\n                <component\r\n                  ref=\"questionComponent\"\r\n                  v-bind:is=\"question.type\"\r\n                  v-bind:question=\"question\"\r\n                  v-bind:language=\"language\"\r\n                  v-model=\"dataValue\"\r\n                  v-bind:active=\"active\"\r\n                  v-bind:disabled=\"disabled\"\r\n                  v-on:next=\"onEnter\"\r\n                />\r\n              </span>\r\n            </span>\r\n          </template>\r\n\r\n          <span class=\"f-sub\" v-if=\"showHelperText\">\r\n            <span v-if=\"question.subtitle\">{{ question.subtitle }}</span>\r\n\r\n            <span class=\"f-help\" v-if=\"question.type === QuestionType.LongText && !isMobile\" v-html=\"question.helpText || language.formatString(language.longTextHelpText)\"></span>\r\n\r\n            <span class=\"f-help\" v-if=\"question.type === QuestionType.MultipleChoice && question.multiple\">{{ question.helpText || language.multipleChoiceHelpText }}</span>\r\n            <span class=\"f-help\" v-else-if=\"question.type === QuestionType.MultipleChoice\">{{ question.helpText || language.multipleChoiceHelpTextSingle }}</span>\r\n          </span>\r\n\r\n          <div v-if=\"!question.inline\" class=\"f-answer f-full-width\">\r\n            <component\r\n              ref=\"questionComponent\"\r\n              v-bind:is=\"question.type\"\r\n              v-bind:question=\"question\"\r\n              v-bind:language=\"language\"\r\n              v-model=\"dataValue\"\r\n              v-bind:active=\"active\"\r\n              v-bind:disabled=\"disabled\"\r\n              v-on:next=\"onEnter\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <p v-if=\"question.description || question.descriptionLink.length !== 0\" class=\"f-description\">\r\n          <span v-if=\"question.description\">{{ question.description }}</span>\r\n          <a\r\n            v-for=\"(link, index) in question.descriptionLink\" \r\n            class=\"f-link\" \r\n            v-bind:key=\"'m' + index\"\r\n            v-bind:href=\"link.url\"\r\n            v-bind:target=\"link.target\"\r\n          >{{ link.text || link.url }}</a>\r\n        </p>\r\n\r\n      </div>\r\n      <div class=\"vff-animate f-fade-in f-enter\" v-if=\"showOkButton()\">\r\n        <button \r\n          class=\"o-btn-action\"\r\n          type=\"button\"\r\n          ref=\"button\"\r\n          href=\"#\"\r\n          v-on:click.prevent=\"onEnter\"\r\n          v-bind:aria-label=\"language.ariaOk\"\r\n        >\r\n          <span v-if=\"question.type === QuestionType.SectionBreak\">{{ language.continue }}</span>\r\n          <span v-else-if=\"showSkip()\">{{ language.skip }}</span>\r\n          <span v-else>{{ language.ok }}</span>\r\n        </button>\r\n\r\n        <a \r\n          class=\"f-enter-desc\"\r\n          href=\"#\"\r\n          v-if=\"question.type !== QuestionType.LongText || !isMobile\"\r\n          v-on:click.prevent=\"onEnter\"\r\n          v-html=\"language.formatString(language.pressEnter)\">\r\n        </a>\r\n      </div>\r\n\r\n      <div v-if=\"showInvalid()\" class=\"f-invalid\" role=\"alert\" aria-live=\"assertive\">{{ errorMessage }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  /*\r\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\r\n    https://github.com/ditdot-dev/vue-flow-form\r\n    https://www.ditdot.hr/en\r\n  */\r\n\r\n  import LanguageModel from '../models/LanguageModel'\r\n  import QuestionModel, { QuestionType, LinkOption } from '../models/QuestionModel'\r\n  import FlowFormDropdownType from './QuestionTypes/DropdownType.vue'\r\n  import FlowFormEmailType from './QuestionTypes/EmailType.vue'\r\n  import FlowFormLongTextType from './QuestionTypes/LongTextType.vue'\r\n  import FlowFormMultipleChoiceType from './QuestionTypes/MultipleChoiceType.vue'\r\n  import FlowFormMultiplePictureChoiceType from './QuestionTypes/MultiplePictureChoiceType.vue'\r\n  import FlowFormNumberType from './QuestionTypes/NumberType.vue'\r\n  import FlowFormPasswordType from './QuestionTypes/PasswordType.vue'\r\n  import FlowFormPhoneType from './QuestionTypes/PhoneType.vue'\r\n  import FlowFormSectionBreakType from './QuestionTypes/SectionBreakType.vue'\r\n  import FlowFormTextType from './QuestionTypes/TextType.vue'\r\n  import FlowFormUrlType from './QuestionTypes/UrlType.vue'\r\n  import FlowFormDateType from './QuestionTypes/DateType.vue'\r\n  import FlowFormFileType from './QuestionTypes/FileType.vue'\r\n  import FlowFormMatrixType from './QuestionTypes/MatrixType.vue'\r\n  import { IsMobile } from '../mixins/IsMobile'\r\n  \r\n\r\n  export default {\r\n    name: 'FlowFormQuestion',\r\n\r\n    components: {\r\n      FlowFormDateType,\r\n      FlowFormDropdownType,\r\n      FlowFormEmailType,\r\n      FlowFormLongTextType,\r\n      FlowFormMultipleChoiceType,\r\n      FlowFormMultiplePictureChoiceType,\r\n      FlowFormNumberType,\r\n      FlowFormPasswordType,\r\n      FlowFormPhoneType,\r\n      FlowFormSectionBreakType,\r\n      FlowFormTextType,\r\n      FlowFormFileType,\r\n      FlowFormUrlType,\r\n      FlowFormMatrixType\r\n    },\r\n\r\n    props: {\r\n      question: QuestionModel,\r\n      language: LanguageModel,\r\n      value: [String, Array, Boolean, Number, Object],\r\n      active: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      reverse: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      autofocus: {\r\n        type: Boolean,\r\n        default: true\r\n      }\r\n    },\r\n\r\n    mixins: [\r\n      IsMobile\r\n    ],\r\n\r\n    data() {\r\n      return {\r\n        QuestionType: QuestionType,\r\n        dataValue: null,\r\n        debounced: false\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.autofocus && this.focusField()\r\n\r\n      this.dataValue = this.question.answer\r\n\r\n      this.$refs.qanimate.addEventListener('animationend', this.onAnimationEnd)\r\n    },\r\n\r\n    beforeUnmount() {\r\n      this.$refs.qanimate.removeEventListener('animationend', this.onAnimationEnd)\r\n    },\r\n\r\n    methods: {\r\n      /**\r\n       * Autofocus the input box of the current question\r\n       */\r\n      focusField() {\r\n        const el = this.$refs.questionComponent\r\n        \r\n        el && el.focus()\r\n      },\r\n\r\n      onAnimationEnd() {\r\n        this.autofocus && this.focusField()\r\n      },\r\n\r\n      shouldFocus() {\r\n        const q = this.$refs.questionComponent\r\n\r\n        return q && q.canReceiveFocus && !q.focused\r\n      },\r\n\r\n      returnFocus() {\r\n        const q = this.$refs.questionComponent\r\n\r\n        if (this.shouldFocus()) {\r\n          this.focusField()\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Emits \"answer\" event and calls \"onEnter\" method on Enter press\r\n       */ \r\n      onEnter($event) {\r\n        this.checkAnswer(this.emitAnswer)\r\n      },\r\n\r\n      onTab($event) {\r\n        this.checkAnswer(this.emitAnswerTab)\r\n      },\r\n\r\n      checkAnswer(fn) {\r\n        const q = this.$refs.questionComponent\r\n\r\n        if (q.isValid() && this.question.isMultipleChoiceType() && this.question.nextStepOnAnswer &&  !this.question.multiple) {\r\n          this.$emit('disable', true)\r\n\r\n          this.debounce(() => {\r\n            fn(q)\r\n            this.$emit('disable', false)\r\n          }, 350)\r\n        } else {\r\n          fn(q)\r\n        }\r\n      },\r\n\r\n      emitAnswer(q) {\r\n        if (q) {\r\n          if (!q.focused) {\r\n            this.$emit('answer', q)\r\n          }\r\n\r\n          q.onEnter()\r\n        }\r\n      },\r\n\r\n      emitAnswerTab(q) {\r\n        if (q && this.question.type !== QuestionType.Date) {\r\n          this.returnFocus()\r\n          this.$emit('answer', q)\r\n          \r\n          q.onEnter()\r\n        }\r\n      },\r\n\r\n      debounce(fn, delay) {\r\n        let debounceTimer\r\n        this.debounced = true\r\n      \r\n        return (() => {\r\n          clearTimeout(debounceTimer)\r\n          debounceTimer = setTimeout(fn, delay)\r\n        })()\r\n      },\r\n      \r\n      /**\r\n       * Check if the \"OK\" button should be shown.\r\n       */\r\n      showOkButton() {\r\n        const q = this.$refs.questionComponent\r\n\r\n        if (this.question.type === QuestionType.SectionBreak) {\r\n          return this.active\r\n        }\r\n\r\n        if (!this.question.required) {\r\n          return true\r\n        }\r\n\r\n        if (this.question.allowOther && this.question.other) {\r\n          return true\r\n        }\r\n\r\n        if (this.question.isMultipleChoiceType() && !this.question.multiple && this.question.nextStepOnAnswer) {\r\n          return false\r\n        }\r\n      \r\n        // If there is no question referenced, or dataValue is still set to its default (null).\r\n        // This allows a ChoiceOption value of false, but will not allow you to use null as a value.\r\n        if (!q || this.dataValue === null) {\r\n          return false\r\n        }\r\n\r\n        return q.hasValue && q.isValid()\r\n      },\r\n\r\n      showSkip() {\r\n        const q = this.$refs.questionComponent\r\n\r\n        // We might not have a reference to the question component at first\r\n        // but we know that if we don't, it's definitely empty\r\n        return !this.question.required && (!q || !q.hasValue)\r\n      },\r\n\r\n      /**\r\n       * Determins if the invalid message should be shown.\r\n       */\r\n      showInvalid() {\r\n        const q = this.$refs.questionComponent\r\n\r\n        if (!q || this.dataValue === null) {\r\n          return false\r\n        }\r\n\r\n        return q.showInvalid()\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      mainClasses: {\r\n        cache: false,\r\n        get() {\r\n          const classes = {\r\n            'q-is-active': this.active,\r\n            'q-is-inactive': !this.active,\r\n            'f-fade-in-down': this.reverse,\r\n            'f-fade-in-up': !this.reverse,\r\n            'f-focused': this.$refs.questionComponent && this.$refs.questionComponent.focused,\r\n            'f-has-value': this.$refs.questionComponent && this.$refs.questionComponent.hasValue\r\n          }\r\n\r\n          classes['field-' + this.question.type.toLowerCase().substring(8, this.question.type.length - 4)] = true\r\n\r\n          return classes\r\n        }\r\n      },\r\n\r\n      showHelperText() {\r\n        if (this.question.subtitle) {\r\n          return true\r\n        }\r\n\r\n        if (this.question.type === QuestionType.LongText || this.question.type === QuestionType.MultipleChoice) {\r\n          return this.question.helpTextShow\r\n        }\r\n\r\n        return false\r\n      },\r\n\r\n      errorMessage() {\r\n        const q = this.$refs.questionComponent\r\n\r\n        if (q && q.errorMessage) {\r\n          return q.errorMessage\r\n        }\r\n\r\n        return this.language.invalidPrompt\r\n      }\r\n    }\r\n  }\r\n</script>\r\n","/*!\n  Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n  https://github.com/ditdot-dev/vue-flow-form\n  https://www.ditdot.hr/en\n*/\n\n// Language data store\n\nexport default class LanguageModel {\n  constructor(options) {\n    this.enterKey = 'Enter'\n    this.shiftKey = 'Shift'\n    this.ok = 'OK'\n    this.continue = 'Continue'\n    this.skip = 'Skip'\n    this.pressEnter = 'Press :enterKey'\n    this.multipleChoiceHelpText = 'Choose as many as you like'\n    this.multipleChoiceHelpTextSingle = 'Choose only one answer'\n    this.otherPrompt = 'Other'\n    this.placeholder = 'Type your answer here...'\n    this.submitText = 'Submit'\n    this.longTextHelpText = ':shiftKey + :enterKey to make a line break.'\n    this.prev = 'Prev'\n    this.next = 'Next'\n    this.percentCompleted = ':percent% completed'\n    this.invalidPrompt = 'Please fill out the field correctly'\n    this.thankYouText = 'Thank you!'\n    this.successText = 'Your submission has been sent.'\n    this.ariaOk = 'Press to continue'\n    this.ariaRequired = 'This step is required'\n    this.ariaPrev = 'Previous step'\n    this.ariaNext = 'Next step'\n    this.ariaSubmitText = 'Press to submit'\n    this.ariaMultipleChoice = 'Press :letter to select'\n    this.ariaTypeAnswer = 'Type your answer here'\n    this.errorAllowedFileTypes = 'Invalid file type. Allowed file types: :fileTypes.'\n    this.errorMaxFileSize = 'File(s) too large. Maximum allowed file size: :size.'\n    this.errorMinFiles = 'Too few files added. Minimum allowed files: :min.'\n    this.errorMaxFiles = 'Too many files added. Maximum allowed files: :max.'\n\n    Object.assign(this, options || {})\n  }\n\n  /**\n   * Inserts a new CSS class into the language model string to format the :string\n   * Use it in a component's v-html directive: v-html=\"language.formatString(language.languageString)\"\n   */\n  formatString(string, replacements) {\n    return string.replace(/:(\\w+)/g, (match, word) => {\n      if (this[word]) {\n        return '<span class=\"f-string-em\">' + this[word] + '</span>'\n      } else if (replacements && replacements[word]) {\n        return replacements[word]\n      }\n      \n      return match\n    })\n  }\n\n  formatFileSize(bytes) {\n    const\n      units = ['B', 'kB', 'MB', 'GB', 'TB'],\n      i = bytes > 0 ? Math.floor(Math.log(bytes) / Math.log(1024)) : 0\n      \n    return (bytes / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + units[i];\n  }\n}\n\n\n","/*\r\n  Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\r\n  https://github.com/ditdot-dev/vue-flow-form\r\n  https://www.ditdot.hr/en\r\n*/\r\n\r\n// Global data store\r\n\r\nexport const QuestionType = Object.freeze({\r\n  Date: 'FlowFormDateType',\r\n  Dropdown: 'FlowFormDropdownType',\r\n  Email: 'FlowFormEmailType',\r\n  File: 'FlowFormFileType',\r\n  LongText: 'FlowFormLongTextType',\r\n  MultipleChoice: 'FlowFormMultipleChoiceType',\r\n  MultiplePictureChoice: 'FlowFormMultiplePictureChoiceType',\r\n  Number: 'FlowFormNumberType',\r\n  Password: 'FlowFormPasswordType',\r\n  Phone: 'FlowFormPhoneType',\r\n  SectionBreak: 'FlowFormSectionBreakType',\r\n  Text: 'FlowFormTextType',\r\n  Url: 'FlowFormUrlType',\r\n  Matrix: 'FlowFormMatrixType'\r\n})\r\n\r\nexport const DropdownOptionBlank = Object.freeze({\r\n  label: '',\r\n  value: '',\r\n  disabled: true\r\n})\r\n\r\nexport const MaskPresets = Object.freeze({\r\n  Date: '##/##/####',\r\n  DateIso: '####-##-##',\r\n  PhoneUs: '(###) ###-####'\r\n})\r\n\r\nexport class ChoiceOption {\r\n  constructor(options) {\r\n    this.label = ''\r\n    this.value = null\r\n    this.selected = false\r\n    this.imageSrc = null\r\n    this.imageAlt = null\r\n\r\n    Object.assign(this, options)\r\n  }\r\n\r\n  choiceLabel() {\r\n    return this.label || this.value\r\n  }\r\n\r\n  choiceValue() {\r\n    // Returns the value if it's anything other than the default (null).\r\n    if (this.value !== null) {\r\n      return this.value\r\n    }\r\n\r\n    // Returns any other non-empty property if the value has not been set.\r\n    return this.label || this.imageAlt || this.imageSrc\r\n  }\r\n\r\n  toggle() {\r\n    this.selected = !this.selected\r\n  }\r\n}\r\n\r\nexport class LinkOption {\r\n  constructor(options) {\r\n    this.url = ''\r\n    this.text = ''\r\n    this.target = '_blank'\r\n\r\n    Object.assign(this, options)\r\n  }\r\n}\r\n\r\nexport class MatrixColumn {\r\n  constructor(options) {\r\n    this.value = ''\r\n    this.label = ''\r\n\r\n    Object.assign(this, options)\r\n  }\r\n}\r\n\r\nexport class MatrixRow {\r\n  constructor(options) {\r\n    this.id = ''\r\n    this.label = ''\r\n\r\n    Object.assign(this, options)\r\n  }\r\n}\r\n\r\nexport default class QuestionModel {\r\n  constructor(options) {\r\n    // Make sure the options variable is an object\r\n    options = options || {}\r\n\r\n    this.id = null\r\n    this.answer = null\r\n    this.answered = false\r\n    this.index = 0\r\n    this.options = []\r\n    this.description = ''\r\n    this.className = ''\r\n    this.type = null\r\n    this.html = null\r\n    this.required = false\r\n    this.jump = null\r\n    this.placeholder = null\r\n    this.mask = ''\r\n    this.multiple = false\r\n    this.allowOther = false\r\n    this.other = null\r\n    this.language = null\r\n    this.tagline = null\r\n    this.title = null\r\n    this.subtitle = null\r\n    this.content = null\r\n    this.inline = false\r\n    this.helpText = null\r\n    this.helpTextShow = true\r\n    this.descriptionLink = []\r\n    this.min = null\r\n    this.max = null\r\n    this.maxLength = null\r\n    this.nextStepOnAnswer = false\r\n    this.accept = null\r\n    this.maxSize = null\r\n    this.rows = []\r\n    this.columns = []\r\n\r\n    Object.assign(this, options)\r\n\r\n    // Sets default mask and placeholder value on PhoneType question\r\n    if (this.type === QuestionType.Phone) {\r\n      if (!this.mask) {\r\n        this.mask = MaskPresets.Phone\r\n      }\r\n      if (!this.placeholder) {\r\n        this.placeholder = this.mask\r\n      }\r\n    }\r\n\r\n    if (this.type === QuestionType.Url) {\r\n      this.mask = null\r\n    }\r\n\r\n    if (this.type === QuestionType.Date && !this.placeholder) {\r\n      this.placeholder = 'yyyy-mm-dd'\r\n    }\r\n\r\n    if (this.type !== QuestionType.Matrix && this.multiple && !Array.isArray(this.answer)) {\r\n      this.answer = this.answer ? [this.answer] : []\r\n    }\r\n\r\n    // Check if we have an answer already (when we have a pre-filled form)\r\n    // and set the answered property accordingly\r\n    if (!this.required && typeof options.answer !== 'undefined') {\r\n      this.answered = true\r\n    } else if (this.answer && (!this.multiple || this.answer.length)) {\r\n      this.answered = true\r\n    }\r\n\r\n    this.resetOptions()\r\n  }\r\n\r\n  getJumpId() {\r\n    let nextId = null\r\n\r\n    if (typeof this.jump === 'function') {\r\n      nextId = this.jump.call(this)\r\n    } else if (this.jump[this.answer]) {\r\n      nextId = this.jump[this.answer]\r\n    } else if (this.jump['_other']) {\r\n      nextId = this.jump['_other']\r\n    }\r\n\r\n    return nextId\r\n  }\r\n\r\n  setAnswer(answer) {\r\n    if (this.type === QuestionType.Number && answer !== '' && !isNaN(+answer)) {\r\n      answer = +answer\r\n    }\r\n\r\n    this.answer = answer\r\n  }\r\n\r\n  setIndex(index) {\r\n    if (!this.id) {\r\n      this.id = 'q_' + index\r\n    }\r\n\r\n    this.index = index\r\n  }\r\n\r\n  resetOptions() {\r\n    if (this.options) {\r\n      const isArray = Array.isArray(this.answer)\r\n      let numSelected = 0\r\n\r\n      this.options.forEach(o => {\r\n        const optionValue = o.choiceValue()\r\n\r\n        if (this.answer === optionValue || (isArray && this.answer.indexOf(optionValue) !== -1)) {\r\n          o.selected = true\r\n          ++numSelected\r\n        } else {\r\n          o.selected = false\r\n        }\r\n      })\r\n\r\n      if (this.allowOther) {\r\n        let otherAnswer = null\r\n\r\n        if (isArray) {\r\n          if (this.answer.length && this.answer.length !== numSelected) {\r\n            otherAnswer = this.answer[this.answer.length - 1]\r\n          }\r\n        } else if (this.options.map(o => o.choiceValue()).indexOf(this.answer) === -1) {\r\n          otherAnswer = this.answer\r\n        }\r\n\r\n        if (otherAnswer !== null) {\r\n          this.other = otherAnswer\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  resetAnswer() {\r\n    this.answered = false\r\n    this.answer = this.multiple ? [] : null\r\n    this.other = null\r\n\r\n    this.resetOptions()\r\n  }\r\n\r\n  isMultipleChoiceType() {\r\n    return [QuestionType.MultipleChoice, QuestionType.MultiplePictureChoice].includes(this.type)\r\n  }\r\n}\r\n","<template>\n  <span class=\"faux-form\">\n    <select\n      ref=\"input\"\n      class\n      v-bind:value=\"dataValue\"\n      v-on:change=\"onChange\"\n      v-on:keydown=\"onKeyDownListener\"\n      v-on:keyup=\"onKeyUpListener\"\n      v-bind:required=\"question.required\"\n    >\n      <option v-if=\"question.required\" label=\" \" value=\"\" disabled selected hidden>&nbsp;</option>\n      <option v-for=\"(option, index) in question.options\" v-bind:disabled=\"option.disabled\" v-bind:value=\"option.choiceValue()\" v-bind:key=\"'o' + index\">\n        {{ option.choiceLabel() }}\n      </option>\n    </select>\n    <span>\n      <span class=\"f-empty\" v-bind:class=\"{'f-answered': this.question.answer && this.question.answered}\">{{ answerLabel }}</span>\n      <span class=\"f-arrow-down\">\n        <svg version=\"1.1\" id=\"Capa_1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          x=\"0px\"\n          y=\"0px\"\n          viewBox=\"-163 254.1 284.9 284.9\"\n          style\n          xml:space=\"preserve\"\n        >\n          <g>\n            <path d=\"M119.1,330.6l-14.3-14.3c-1.9-1.9-4.1-2.9-6.6-2.9c-2.5,0-4.7,1-6.6,2.9L-20.5,428.5l-112.2-112.2c-1.9-1.9-4.1-2.9-6.6-2.9c-2.5,0-4.7,0.9-6.6,2.9l-14.3,14.3c-1.9,1.9-2.9,4.1-2.9,6.6c0,2.5,1,4.7,2.9,6.6l133,133c1.9,1.9,4.1,2.9,6.6,2.9s4.7-1,6.6-2.9l133.1-133c1.9-1.9,2.8-4.1,2.8-6.6C121.9,334.7,121,332.5,119.1,330.6z\" />\n          </g>\n        </svg>\n      </span>\n    </span>\n  </span>\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import BaseType from './BaseType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: BaseType,\n\n    name: QuestionType.Dropdown,\n\n    computed: {\n      answerLabel() {\n        for (let i = 0; i < this.question.options.length; i++) {\n          let option = this.question.options[i]\n\n          if (option.choiceValue() === this.dataValue) {\n            return option.choiceLabel()\n          }\n        }\n\n        return this.question.placeholder\n      }\n    },\n\n    methods: {\n      onKeyDownListener($event) {\n        if ($event.key === 'ArrowDown' || $event.key === 'ArrowUp') {\n          this.setAnswer(this.dataValue)\n        } else if ($event.key === 'Enter' && this.hasValue) {\n          this.focused = false\n          this.blur()\n        }\n      },\n      \n      onKeyUpListener($event) {\n        if ($event.key === 'Enter' && this.isValid() && !this.disabled) {\n          $event.stopPropagation()\n          this._onEnter()\n          this.$emit('next')\n        }\n      }\n    }\n  }\n</script>","/*\n  Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n  https://github.com/ditdot-dev/vue-flow-form\n  https://www.ditdot.hr/en\n*/\n\nlet\n  isIos = false,\n  isMobile = false\n\nif (typeof navigator !== 'undefined' && typeof document !== 'undefined') {\n  // Simple mobile device/tablet detection\n  isIos = navigator.userAgent.match(/iphone|ipad|ipod/i) || (navigator.userAgent.indexOf('Mac') !== -1 && 'ontouchend' in document)\n  isMobile = isIos || navigator.userAgent.match(/android/i)\n}\n\n// Mixin that adds `isMobile` and `isIos` data variables\nexport const IsMobile = {\n  data() {\n    return {\n      isIos,\n      isMobile\n    }\n  }\n}","// Used as the basis and extended by other Question Type components\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import QuestionModel from '../../models/QuestionModel'\n  import LanguageModel from '../../models/LanguageModel'\n  import { IsMobile } from '../../mixins/IsMobile'\n\n  export default {\n    name: 'FlowFormBaseType',\n\n    props: {\n      language: LanguageModel,\n      question: QuestionModel,\n      active: Boolean,\n      disabled: Boolean,\n      modelValue: [String, Array, Boolean, Number, Object]\n    },\n\n    mixins: [\n      IsMobile,\n    ],\n\n    data() {\n      return {\n        dirty: false,\n        dataValue: null,\n        answer: null,\n        enterPressed: false,\n        allowedChars: null,\n        alwaysAllowedKeys: ['ArrowLeft', 'ArrowRight', 'Delete', 'Backspace'],\n        focused: false,\n        canReceiveFocus: false,\n        errorMessage: null\n      }\n    },\n\n    mounted() {\n      if (this.question.answer) {\n        this.dataValue = this.answer = this.question.answer\n      } else if (this.question.multiple) {\n        this.dataValue = []\n      }\n    },\n\n    methods: {\n      /**\n       * This method can be overriden in custom components to \n       * change the answer before going through validation.\n       */\n      fixAnswer(answer) {\n        return answer\n      },\n\n      getElement() {\n        let el = this.$refs.input\n\n        // Sometimes the input is nested so we need to find it\n        while (el && el.$el) {\n          el = el.$el\n        }\n\n        return el\n      },\n\n      setFocus() {\n        this.focused = true\n      },\n\n      // eslint-disable-next-line no-unused-vars\n      unsetFocus($event) {\n        this.focused = false\n      },\n\n      focus() {\n        if (!this.focused) {\n          const el = this.getElement()\n\n          el && el.focus()\n        }\n      },\n\n      blur() {\n        const el = this.getElement()\n\n        el && el.blur()\n      },\n\n      onKeyDown($event) {\n        this.enterPressed = false\n        clearTimeout(this.timeoutId)\n\n        if ($event) {\n          if ($event.key === 'Enter' && !$event.shiftKey) {\n            this.unsetFocus()\n          }\n\n          if (this.allowedChars !== null) {\n            // Check if the entered character is allowed.\n            // We always allow keys from the alwaysAllowedKeys array.\n            if (this.alwaysAllowedKeys.indexOf($event.key) === -1 && this.allowedChars.indexOf($event.key) === -1) {\n              $event.preventDefault()\n            }\n          }\n        }\n      },\n\n      onChange($event) {\n        this.dirty = true\n        this.dataValue = $event.target.value\n\n        this.onKeyDown()\n        this.setAnswer(this.dataValue)\n      },\n\n      onEnter() {\n        this._onEnter()\n      },\n\n      _onEnter() {\n        this.enterPressed = true\n\n        this.dataValue = this.fixAnswer(this.dataValue)\n        this.setAnswer(this.dataValue)\n        this.isValid() ? this.blur() : this.focus()\n      },\n\n      setAnswer(answer) {\n        this.question.setAnswer(answer)\n\n        this.answer = this.question.answer\n        this.question.answered = this.isValid()\n\n        this.$emit('update:modelValue', this.answer)\n      },\n\n      showInvalid() {\n        return this.dirty && this.enterPressed && !this.isValid()\n      },\n\n      isValid() {\n        if (!this.question.required && !this.hasValue && this.dirty) {\n          return true\n        }\n\n        if (this.validate()) {\n          return true\n        }\n\n        return false\n      },\n      \n      /**\n       * This method validates the input and is meant to be overriden\n       * in custom question types.\n       */\n      validate() {\n        return !this.question.required || this.hasValue\n      }\n    },\n    \n    computed: {\n      placeholder() {\n        return this.question.placeholder || this.language.placeholder\n      },\n\n      hasValue() {\n        if (this.dataValue !== null) {\n          let v = this.dataValue\n\n          if (v.trim) {\n            // Don't allow empty strings\n            return v.trim().length > 0\n          }\n\n          if (Array.isArray(v)) {\n            // Don't allow empty arrays\n            return v.length > 0\n          }\n\n          // All other non-null values are allowed to pass through\n          return true\n        }\n\n        return false\n      }\n    }\n  }\n</script>\n\n<style></style>\n","import script from \"./BaseType.vue?vue&type=script&lang=js\"\nexport * from \"./BaseType.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./DropdownType.vue?vue&type=template&id=7db51668\"\nimport script from \"./DropdownType.vue?vue&type=script&lang=js\"\nexport * from \"./DropdownType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <span v-bind:data-placeholder=\"inputType === 'date' ? placeholder : null\">\n    <the-mask\n      v-if=\"question.mask\"\n      ref=\"input\"\n      v-bind:mask=\"question.mask\"\n      v-bind:masked=\"false\"\n      v-bind:type=\"inputType\"\n      v-bind:value=\"modelValue\"\n      v-bind:required=\"question.required\"\n      v-on:keydown=\"onKeyDown\"\n      v-on:keyup=\"onChange\"\n      v-on:focus=\"setFocus\"\n      v-on:blur=\"unsetFocus\"\n      v-on:keyup.enter.prevent=\"onEnter\"\n      v-on:keyup.tab.prevent=\"onEnter\"\n      v-bind:placeholder=\"placeholder\"\n      v-bind:min=\"question.min\"\n      v-bind:max=\"question.max\"\n      v-on:change=\"onChange\"\n    />\n    <input\n      v-else\n      ref=\"input\"\n      v-bind:type=\"inputType\"\n      v-bind:value=\"modelValue\"\n      v-bind:required=\"question.required\"\n      v-on:keydown=\"onKeyDown\"\n      v-on:keyup=\"onChange\"\n      v-on:keyup.enter.prevent=\"onEnter\"\n      v-on:keyup.tab.prevent=\"onEnter\"\n      v-on:focus=\"setFocus\"\n      v-on:blur=\"unsetFocus\"\n      v-bind:min=\"question.min\"\n      v-bind:max=\"question.max\"\n      v-on:change=\"onChange\"\n      v-bind:placeholder=\"placeholder\"\n      v-bind:maxlength=\"question.maxLength\"\n    />\n  </span>\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import BaseType from './BaseType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n  import TheMask from 'vue-the-mask/src/component'\n\n  export default {\n    extends: BaseType,\n    name: QuestionType.Text,\n    components: {\n      TheMask\n    },\n\n    data() {\n      return {\n        inputType: 'text',\n        canReceiveFocus: true\n      }\n    },\n\n    methods: {\n      validate() {\n        if (this.question.mask && this.hasValue) {\n          return this.validateMask()\n        }\n\n        return !this.question.required || this.hasValue\n      },\n\n      validateMask() {\n        if (Array.isArray(this.question.mask)) {\n          return this.question.mask.some(mask => mask.length === this.dataValue.length)\n        }\n\n        return this.dataValue.length === this.question.mask.length\n      }\n    }\n  }\n</script>\n","import { render } from \"./TextType.vue?vue&type=template&id=7af0f61e\"\nimport script from \"./TextType.vue?vue&type=script&lang=js\"\nexport * from \"./TextType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import TextType from './TextType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: TextType,\n    name: QuestionType.Email,\n    data() {\n      return {\n        inputType: 'email'\n      }\n    },\n    methods: {\n      validate() {\n        if (this.hasValue) {\n          return /^[^@]+@.+[^.]$/.test(this.dataValue)\n        }\n\n        return !this.question.required\n      }\n    }\n  }\n</script>","import script from \"./EmailType.vue?vue&type=script&lang=js\"\nexport * from \"./EmailType.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <span>\n    <textarea-autosize\n      ref=\"input\"\n      rows=\"1\"\n      v-bind:value=\"modelValue\"\n      v-bind:required=\"question.required\"\n      v-on:keydown=\"onKeyDown\"\n      v-on:keyup=\"onChange\"\n      v-on:keydown.enter.exact=\"onEnterDown\"\n      v-on:keyup.enter.exact.prevent=\"onEnter\"\n      v-on:keyup.tab.prevent=\"onEnter\"\n      v-on:focus=\"setFocus\"\n      v-on:blur=\"unsetFocus\"\n      v-bind:placeholder=\"placeholder\"\n      v-bind:maxlength=\"question.maxLength\"\n    />\n  </span>\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import BaseType from './BaseType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n  import TextareaAutosize from 'vue-textarea-autosize/src/components/TextareaAutosize'\n\n  export default {\n    extends: BaseType,\n\n    name: QuestionType.LongText,\n\n    components: {\n      TextareaAutosize\n    },\n\n    data () {\n      return {\n        canReceiveFocus: true\n      }\n    },\n\n    mounted() {\n      window.addEventListener('resize', this.onResizeListener)\n    },\n\n    beforeUnmount() {\n      window.removeEventListener('resize', this.onResizeListener)\n    },\n\n    methods: {\n      onResizeListener() {\n        this.$refs.input.resize()\n      },\n\n      unsetFocus($event) {\n        if ($event || !this.isMobile) {\n          this.focused = false\n        }\n      },\n\n      onEnterDown($event) {\n        if (!this.isMobile) {\n          $event.preventDefault()\n        }\n      },\n\n      onEnter() {\n        this._onEnter()\n        \n        if (this.isMobile) {\n          this.focus()\n        }\n      }\n    }\n  }\n</script>\n","import { render } from \"./LongTextType.vue?vue&type=template&id=323e2b74\"\nimport script from \"./LongTextType.vue?vue&type=script&lang=js\"\nexport * from \"./LongTextType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"f-radios-wrap\">\r\n    <ul class=\"f-radios\" v-bind:class=\"{'f-multiple': question.multiple}\" role=\"listbox\">\r\n      <li\r\n        v-for=\"(option, index) in question.options\"\r\n        v-on:click.prevent=\"toggleAnswer(option)\"\r\n        v-bind:class=\"{'f-selected': option.selected}\"\r\n        v-bind:key=\"'m' + index\"\r\n        v-bind:aria-label=\"getLabel(index)\"\r\n        role=\"option\"\r\n      >\r\n        <span class=\"f-image\" v-if=\"hasImages && option.imageSrc\">\r\n          <img v-bind:src=\"option.imageSrc\" v-bind:alt=\"option.imageAlt\">\r\n        </span>\r\n        <div class=\"f-label-wrap\">\r\n          <span class=\"f-key\">{{ getToggleKey(index) }}</span>\r\n          <span v-if=\"option.choiceLabel()\" class=\"f-label\">{{ option.choiceLabel() }}</span>\r\n        </div>\r\n      </li>\r\n      <li\r\n        class=\"f-other\"\r\n        v-if=\"!hasImages && question.allowOther\"\r\n        v-on:click.prevent=\"startEditOther\"\r\n        v-bind:class=\"{'f-selected': question.other, 'f-focus': editingOther}\"\r\n        v-bind:aria-label=\"language.ariaTypeAnswer\"\r\n        role=\"option\"\r\n      >\r\n        <div class=\"f-label-wrap\">\r\n          <span class=\"f-key\" v-if=\"!editingOther\">{{ getToggleKey(question.options.length) }}</span>\r\n          <input\r\n            v-if=\"editingOther\"\r\n            v-model=\"question.other\"\r\n            type=\"text\"\r\n            ref=\"otherInput\"\r\n            v-on:blur=\"stopEditOther\"\r\n            v-on:keyup.enter.prevent=\"stopEditOther\"\r\n            v-on:keyup=\"onChangeOther\"\r\n            v-on:change=\"onChangeOther\"\r\n            maxlength=\"256\"\r\n          />\r\n          <span v-else-if=\"question.other\" class=\"f-selected\">\r\n            <span class=\"f-label\">{{ question.other }}</span>\r\n          </span>\r\n          <span v-else class=\"f-label\">{{ language.otherPrompt }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  /*\r\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\r\n    https://github.com/ditdot-dev/vue-flow-form\r\n    https://www.ditdot.hr/en\r\n  */\r\n\r\n  import BaseType from './BaseType.vue'\r\n  import { QuestionType } from '../../models/QuestionModel'\r\n\r\n  export default {\r\n    extends: BaseType,\r\n    name: QuestionType.MultipleChoice,\r\n\r\n    data() {\r\n      return {\r\n        editingOther: false,\r\n        hasImages: false\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.addKeyListener()\r\n    },\r\n\r\n    beforeUnmount() {\r\n      this.removeKeyListener()\r\n    },\r\n\r\n    watch: {\r\n      active(value) {\r\n        if (value) {\r\n          this.addKeyListener()\r\n\r\n          if (this.question.multiple && this.question.answered) {\r\n            this.enterPressed = false\r\n          }\r\n        } else {\r\n          this.removeKeyListener()\r\n        }\r\n      }\r\n    },\r\n    \r\n    methods: {\r\n      addKeyListener() {\r\n        this.removeKeyListener()\r\n        document.addEventListener('keyup', this.onKeyListener)\r\n      },\r\n\r\n      removeKeyListener() {\r\n        document.removeEventListener('keyup', this.onKeyListener)\r\n      },\r\n\r\n      /**\r\n       * Listens for keyboard events (A, B, C, ...)\r\n       */\r\n      onKeyListener($event) {\r\n        if (this.active && !this.editingOther && $event.key && $event.key.length === 1) {\r\n          let keyCode = $event.key.toUpperCase().charCodeAt(0)\r\n\r\n          if (keyCode >= 65 && keyCode <= 90) {\r\n            let index = keyCode - 65\r\n\r\n            if (index > -1) {\r\n              let option = this.question.options[index]\r\n\r\n              if (option) {\r\n                this.toggleAnswer(option)\r\n              } else if (this.question.allowOther && index === this.question.options.length) {\r\n                this.startEditOther()\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      getLabel(index) {\r\n        return this.language.ariaMultipleChoice.replace(':letter', this.getToggleKey(index))\r\n      },\r\n\r\n      getToggleKey(index) {\r\n        const key = 65 + index\r\n\r\n        if (key <= 90) {\r\n          return String.fromCharCode(key)\r\n        }\r\n\r\n        return ''\r\n      },\r\n\r\n      toggleAnswer(option) {\r\n        if (!this.question.multiple) {\r\n          if (this.question.allowOther) {\r\n            this.question.other = this.dataValue = null\r\n            this.setAnswer(this.dataValue)\r\n          }\r\n\r\n          for (let i = 0; i < this.question.options.length; i++) {\r\n            let o = this.question.options[i]\r\n\r\n            if (o.selected) {\r\n              this._toggleAnswer(o)\r\n            }\r\n          }\r\n        }\r\n\r\n        this._toggleAnswer(option)\r\n      },\r\n\r\n      _toggleAnswer(option) {\r\n        const optionValue = option.choiceValue()\r\n\r\n        option.toggle()\r\n\r\n        if (this.question.multiple) {\r\n          this.enterPressed = false\r\n\r\n          if (!option.selected) {\r\n            this._removeAnswer(optionValue)\r\n          } else if (this.dataValue.indexOf(optionValue) === -1) {\r\n            this.dataValue.push(optionValue)\r\n          }\r\n        } else {\r\n          this.dataValue = option.selected ? optionValue : null\r\n        }\r\n\r\n      \r\n        if (this.isValid() && this.question.nextStepOnAnswer && !this.question.multiple && !this.disabled) {\r\n          this.$emit('next')\r\n        }\r\n\r\n        this.setAnswer(this.dataValue)\r\n      },\r\n\r\n      _removeAnswer(value) {\r\n        const index = this.dataValue.indexOf(value)\r\n\r\n        if (index !== -1) {\r\n          this.dataValue.splice(index, 1)\r\n        }\r\n      },\r\n\r\n      startEditOther() {\r\n        this.editingOther = true\r\n        this.enterPressed = false\r\n\r\n        this.$nextTick(() => {\r\n          this.$refs.otherInput.focus()\r\n        })\r\n      },\r\n\r\n      onChangeOther() {\r\n        if (this.editingOther) {\r\n          let\r\n            value = [],\r\n            self = this\r\n\r\n          this.question.options.forEach(function(option) {\r\n            if (option.selected) {\r\n              if (self.question.multiple) {\r\n                value.push(option.choiceValue())\r\n              } else {\r\n                option.toggle()\r\n              }\r\n            }\r\n          })\r\n\r\n          if (this.question.other && this.question.multiple) {\r\n            value.push(this.question.other)\r\n          } else if (!this.question.multiple) {\r\n            value = this.question.other\r\n          }\r\n\r\n          this.dataValue = value\r\n          this.setAnswer(this.dataValue)\r\n        }\r\n      },\r\n      \r\n      stopEditOther() {\r\n        this.editingOther = false\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      hasValue() {\r\n        if (this.question.options.filter(o => o.selected).length) {\r\n          return true\r\n        }\r\n\r\n        if (this.question.allowOther) {\r\n          return this.question.other && this.question.other.trim().length > 0\r\n        }\r\n\r\n        return false\r\n      }\r\n    }\r\n  }\r\n</script>\r\n","import { render } from \"./MultipleChoiceType.vue?vue&type=template&id=bf565f2c\"\nimport script from \"./MultipleChoiceType.vue?vue&type=script&lang=js\"\nexport * from \"./MultipleChoiceType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import MultipleChoiceType from './MultipleChoiceType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: MultipleChoiceType,\n    name: QuestionType.MultiplePictureChoice,\n\n    data() {\n      return {\n        hasImages: true\n      }\n    }\n  }\n</script>","import script from \"./MultiplePictureChoiceType.vue?vue&type=script&lang=js\"\nexport * from \"./MultiplePictureChoiceType.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import TextType from './TextType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: TextType,\n    name: QuestionType.Number,\n\n    data() {\n      return {\n        inputType: 'tel',\n        allowedChars: '-0123456789.'\n      }\n    },\n\n    methods: {\n      validate() {\n        if (this.question.min !== null && !isNaN(this.question.min) && +this.dataValue < +this.question.min) {\n          return false\n        }\n\n        if (this.question.max !== null && !isNaN(this.question.max) && +this.dataValue > +this.question.max) {\n          return false\n        }\n\n        if (this.hasValue) {\n          if (this.question.mask) {\n            return this.validateMask()\n          }\n\n          return !isNaN(+this.dataValue)\n        }\n\n        return !this.question.required || this.hasValue\n      }\n    }\n  }\n</script>","import script from \"./NumberType.vue?vue&type=script&lang=js\"\nexport * from \"./NumberType.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import TextType from './TextType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: TextType,\n    name: QuestionType.Password,\n    data() {\n      return {\n        inputType: 'password'\n      }\n    }\n  }\n</script>","import script from \"./PasswordType.vue?vue&type=script&lang=js\"\nexport * from \"./PasswordType.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import TextType from './TextType.vue'\n  import LanguageModel from '../../models/LanguageModel'\n  import { QuestionType } from '../../models/QuestionModel'\n  \n  export default {\n    extends: TextType,\n    name: QuestionType.Phone,\n    data() {\n      return {\n        inputType: 'tel', \n        canReceiveFocus: true\n      }\n    }\n  }\n</script>","import script from \"./PhoneType.vue?vue&type=script&lang=js\"\nexport * from \"./PhoneType.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"f-content\" v-if=\"question.content\">\n    <span class=\"f-section-text\">{{ question.content }}</span>\n  </div>\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import BaseType from './BaseType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n  import LanguageModel from '../../models/LanguageModel'\n\n  export default {\n    extends: BaseType,\n    name: QuestionType.SectionBreak,\n    methods: {\n      onEnter() {\n        this.dirty = true\n\n        this._onEnter()\n      },\n\n      isValid() {\n        return true\n      }\n    }\n  }\n</script>","import { render } from \"./SectionBreakType.vue?vue&type=template&id=69a5cf52\"\nimport script from \"./SectionBreakType.vue?vue&type=script&lang=js\"\nexport * from \"./SectionBreakType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import TextType from './TextType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: TextType,\n    name: QuestionType.Url,\n    data() {\n      return {\n        inputType: 'url'\n      }\n    },\n    methods: {\n      fixAnswer(answer) {\n        if (answer && answer.indexOf('://') === -1) {\n          // Insert https protocol to make it easier to enter\n          // correct URLs\n          answer = 'https://' + answer\n        }\n\n        return answer\n      },\n\n      validate() {\n        if (this.hasValue) {\n          try {\n            new URL(this.fixAnswer(this.dataValue))\n\n            return true\n          } catch(_) { \n            // Invalid URL\n            return false\n          }\n        }\n\n        return !this.question.required\n      }\n    }\n  }\n</script>","import script from \"./UrlType.vue?vue&type=script&lang=js\"\nexport * from \"./UrlType.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import TextType from './TextType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n  import LanguageModel from '../../models/LanguageModel'\n\n  export default {\n    extends: TextType,\n    name: QuestionType.Date,\n    data() {\n      return {\n        inputType: 'date'\n      }\n    }, \n    methods: {\n      validate() {\n        if (this.question.min && this.dataValue < this.question.min) {\n          return false\n        }\n\n        if (this.question.max && this.dataValue > this.question.max) {\n          return false\n        }\n\n        return !this.question.required || this.hasValue\n      }\n    }\n  }\n</script>","import script from \"./DateType.vue?vue&type=script&lang=js\"\nexport * from \"./DateType.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <input\n    ref=\"input\"\n    type=\"file\"\n    v-bind:accept=\"question.accept\"\n    v-bind:multiple=\"question.multiple\"\n    v-bind:value=\"modelValue\"\n    v-bind:required=\"question.required\"\n    v-on:keyup.enter.prevent=\"onEnter\"\n    v-on:keyup.tab.prevent=\"onEnter\"\n    v-on:focus=\"setFocus\"\n    v-on:blur=\"unsetFocus\"\n    v-on:change=\"onChange\"\n  />\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import TextType from './TextType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: TextType,\n\n    name: QuestionType.File,\n\n    methods: {\n      setAnswer(answer) {\n        this.question.setAnswer(this.$refs.input.files)\n\n        this.answer = answer\n        this.question.answered = this.isValid()\n\n        this.$emit('update:modelValue', answer)\n      },\n\n      showInvalid() {\n        return this.errorMessage !== null\n      },\n\n      checkFileAccept(file) {\n        const extension = '.' + file.name.split('.').pop()\n\n        if (this.acceptedFileExtensionsRegex && this.acceptedFileExtensionsRegex.test(extension)) {\n          return true\n        }\n\n        if (this.acceptedFileMimesRegex && this.acceptedFileMimesRegex.test(file.type)) {\n          return true\n        }\n\n        return false\n      },\n\n      validate() {\n        if (this.question.required && !this.hasValue) {\n          return false\n        }\n\n        const \n          files = this.$refs.input.files,\n          numFiles = files.length\n\n        if (this.question.accept) {\n          if (!Array.from(files).every(file => this.checkFileAccept(file))) {\n            this.errorMessage = this.language.formatString(this.language.errorAllowedFileTypes, {\n              fileTypes: this.question.accept\n            })\n\n            return false\n          }\n        }\n\n        if (this.question.multiple) {\n          if (this.question.min !== null && numFiles < +this.question.min) {\n            this.errorMessage = this.language.formatString(this.language.errorMinFiles, {\n              min: this.question.min\n            })\n\n            return false\n          }\n\n          if (this.question.max !== null && numFiles > +this.question.max) {\n            this.errorMessage = this.language.formatString(this.language.errorMaxFiles, {\n              max: this.question.max\n            })\n\n            return false\n          }\n        }\n\n        if (this.question.maxSize !== null) {\n          const fileSize =\n            Array.from(files).reduce((current, file) => current + file.size, 0)\n\n          if (fileSize > +this.question.maxSize) {\n            this.errorMessage = this.language.formatString(this.language.errorMaxFileSize, {\n              size: this.language.formatFileSize(this.question.maxSize)\n            })\n\n            return false\n          }\n        }\n\n        this.errorMessage = null\n\n        return this.$refs.input.checkValidity()\n      }\n    },\n\n    computed: {\n      acceptArray() {\n        if (this.question.accept) {\n          return this.question.accept.split(',')\n        }\n\n        return []\n      },\n\n      acceptedFileMimes() {\n        return this.acceptArray.filter(accept => accept[0] !== '.')\n      },\n\n      acceptedFileMimesRegex() {\n        if (this.acceptedFileMimes.length) {\n          return new RegExp(this.acceptedFileMimes.join('|').replace(/\\*/g, '.\\*'))\n        }\n\n        return null\n      },\n\n      acceptedFileExtensions() {\n        return this.acceptArray.filter(accept => accept[0] === '.')\n      },\n\n      acceptedFileExtensionsRegex() {\n        if (this.acceptedFileExtensions.length) {\n          return new RegExp(this.acceptedFileExtensions.join('|'))\n        }\n\n        return null\n      }\n    }\n  }\n</script>","import { render } from \"./FileType.vue?vue&type=template&id=2f4641a3\"\nimport script from \"./FileType.vue?vue&type=script&lang=js\"\nexport * from \"./FileType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"f-matrix-wrap\">\r\n    <table \r\n      class=\"f-matrix-table\"\r\n      v-bind:class=\"{ 'f-matrix-multiple': question.multiple }\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <td></td>\r\n          <th \r\n            v-for=\"(column, index) in question.columns\"\r\n            v-bind:key=\"'c' + index\"\r\n            class=\"f-table-cell f-column-cell\"\r\n          >\r\n            <span class=\"f-table-string\">{{ column.label }}</span>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr \r\n          v-for=\"(row, index) in question.rows\"\r\n          v-bind:key=\"'r' + index\"\r\n          class=\"f-table-row\"\r\n        >\r\n          <td class=\"f-table-cell f-row-cell\">\r\n            <span class=\"f-table-string\">{{ row.label }}</span>\r\n          </td>\r\n          <td\r\n            v-for=\"(column, index) in question.columns\"\r\n            v-bind:key=\"'l' + index\"\r\n            v-bind:title=\"column.label\"\r\n            class=\"f-table-cell f-matrix-cell\"\r\n          >\r\n            <div v-if=\"!question.multiple\" class=\"f-field-wrap\">\r\n              <label class=\"f-matrix-field f-matrix-radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  v-bind:ref=\"el => inputList.push(el)\"\r\n                  v-bind:name=\"row.id\"\r\n                  v-bind:id=\"'c' + index + '-' + row.id\"\r\n                  v-bind:aria-label=\"row.label\"\r\n                  v-bind:data-id=\"row.id\"\r\n                  v-bind:value=\"column.value\"\r\n                  v-model=\"selected[row.id]\"\r\n                  class=\"f-field-control f-radio-control\"\r\n                  v-on:change=\"onChange\"\r\n                />\r\n                <span class=\"f-field-mask f-radio-mask\">\r\n                  <svg\r\n                    viewBox=\"0 0 24 24\"\r\n                    class=\"f-field-svg f-radio-svg\"\r\n                  >\r\n                    <circle r=\"6\" cx=\"12\" cy=\"12\"></circle>\r\n                  </svg>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div v-else class=\"f-field-wrap\">\r\n              <label class=\"f-matrix-field f-matrix-checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  v-bind:ref=\"el => inputList.push(el)\"\r\n                  v-bind:id=\"'c' + index + '-' + row.id\"\r\n                  v-bind:aria-label=\"row.label\"\r\n                  v-bind:data-id=\"row.id\"\r\n                  v-bind:value=\"column.value\"\r\n                  class=\"f-field-control f-checkbox-control\"\r\n                  v-model=\"selected[row.id]\"\r\n                  v-on:change=\"onChange\"\r\n                />\r\n                <span class=\"f-field-mask f-checkbox-mask\">\r\n                  <svg\r\n                    viewBox=\"0 0 24 24\"\r\n                    class=\"f-field-svg f-checkbox-svg\"\r\n                  >\r\n                    <rect width=\"12\" height=\"12\" x=\"6\" y=\"6\"></rect>\r\n                  </svg>\r\n                </span>\r\n              </label>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  /*\r\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\r\n    https://github.com/ditdot-dev/vue-flow-form\r\n    https://www.ditdot.hr/en\r\n  */\r\n\r\n  import BaseType from './BaseType.vue'\r\n  import { QuestionType } from '../../models/QuestionModel'\r\n\r\n  export default {\r\n    extends: BaseType,\r\n    \r\n    name: QuestionType.Matrix,\r\n\r\n    data() {\r\n      return {\r\n        selected: {},\r\n        inputList: []\r\n      }\r\n    },\r\n\r\n    beforeMount() {\r\n      // Pre-fill the form if there is a predefined answer\r\n      if (this.question.multiple) {\r\n        for (let row of this.question.rows) {\r\n          this.selected[row.id] = this.question.answer && this.question.answer[row.id] ? [...this.question.answer[row.id]] : []\r\n        }\r\n      } else if (this.question.answer) {\r\n        this.selected = {...this.question.answer}\r\n      }\r\n    },\r\n\r\n    beforeUpdate() {\r\n      this.inputList = []\r\n    },\r\n\r\n    methods: {\r\n      onChange($event) {\r\n        this.dirty = true\r\n        this.dataValue = this.selected\r\n        this.onKeyDown()\r\n        this.setAnswer(this.dataValue)\r\n      }, \r\n\r\n      validate() {\r\n        if (!this.question.required) {\r\n          return true\r\n        }\r\n\r\n        const checked = inputs => inputs.some(input => input.checked)\r\n\r\n        if (!Object.values(this.inputGroups).every(value => checked(value))) {\r\n          return false\r\n        }\r\n\r\n        return true\r\n      },\r\n\r\n      getElement() {\r\n        return this.inputList[0]\r\n      }, \r\n    },\r\n\r\n    computed: {\r\n      inputGroups() {\r\n        const inputGroups = {}\r\n\r\n        // Setting input list for validation\r\n        for (let row of this.question.rows) {\r\n          inputGroups[row.id] = []\r\n        }\r\n        \r\n        this.inputList.forEach(input => {\r\n          inputGroups[input.dataset.id].push(input) \r\n        })\r\n\r\n        return inputGroups\r\n      }\r\n    }\r\n  }\r\n</script>\r\n","import { render } from \"./MatrixType.vue?vue&type=template&id=67414c3f\"\nimport script from \"./MatrixType.vue?vue&type=script&lang=js\"\nexport * from \"./MatrixType.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FlowFormQuestion.vue?vue&type=template&id=317a44cf\"\nimport script from \"./FlowFormQuestion.vue?vue&type=script&lang=js\"\nexport * from \"./FlowFormQuestion.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n  Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n  https://github.com/ditdot-dev/vue-flow-form\n  https://www.ditdot.hr/en\n*/\n\nconst instances = {}\n\nexport const ComponentInstance = {\n  methods: {\n    getInstance(id) {\n      return instances[id]\n    },\n\n    setInstance() {\n      instances[this.id] = this\n    }\n  }\n}","import { render } from \"./FlowForm.vue?vue&type=template&id=3b742031\"\nimport script from \"./FlowForm.vue?vue&type=script&lang=js\"\nexport * from \"./FlowForm.vue?vue&type=script&lang=js\"\n\nimport \"./FlowForm.vue?vue&type=style&index=0&id=3b742031&lang=css\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Example.vue?vue&type=template&id=395f5a2e\"\nimport script from \"./Example.vue?vue&type=script&lang=js\"\nexport * from \"./Example.vue?vue&type=script&lang=js\"\n\nimport \"./Example.vue?vue&type=style&index=0&id=395f5a2e&lang=css\"\n\nimport exportComponent from \"D:\\\\_work\\\\_ditdot\\\\vff\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n  Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n  https://github.com/ditdot-dev/vue-flow-form\n  https://www.ditdot.hr/en\n*/\n\nimport { createApp } from 'vue'\nimport Example from './Example.vue'\n\ncreateApp(Example).mount('#app')\n","module.exports = __webpack_public_path__ + \"img/facebook.679395c8.png\";","module.exports = __webpack_public_path__ + \"img/instagram.88ba3f4c.png\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Example.vue?vue&type=style&index=0&id=395f5a2e&lang=css\"","module.exports = __webpack_public_path__ + \"img/twitter.e801d0e7.png\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./FlowForm.vue?vue&type=style&index=0&id=3b742031&lang=css\"","module.exports = __webpack_public_path__ + \"img/tiktok.3a7e128a.png\";"],"sourceRoot":""}